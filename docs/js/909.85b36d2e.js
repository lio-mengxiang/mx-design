"use strict";(self.webpackChunk_mx_design_example=self.webpackChunk_mx_design_example||[]).push([[909],{1806:(e,n,t)=>{t.r(n),t.d(n,{default:()=>g});var r,a=t(2798),o=t(9641),i=t(7059),c=t(2983),s=t(9157),l=t(5037),u=t(8060),d=t(9866),p=t(6e3),w={code:"\nimport { useDrawer, Button } from '@mx-design/web';\n\nfunction App() {\n  const Drawer = useDrawer();\n  return (\n    <Button\n      onClick={() => {\n        const drawerId = Drawer.add({\n          title: 'Drawer Title',\n          content: (\n            <>\n              <div>Here is an example text.</div>\n              <div>Here is an example text.</div>\n            </>\n          ),\n          visible: true,\n          onCancel: () => Drawer.remove(drawerId),\n        });\n      }}\n    >\n      Open Drawer\n    </Button>\n  );\n}",namespace:p.Bb},m={code:'\nimport { useDrawer, Space, Button, Radio } from \'@mx-design/web\';\n\nfunction App() {\n  const Drawer = useDrawer();\n  const [placement, setPlacement] = React.useState(\'right\');\n  return (\n    <Space direction="vertical">\n      <Radio.Group name="placement" defaultValue={placement} onChange={setPlacement}>\n        <Radio value="top">Top</Radio>\n        <Radio value="bottom">Bottom</Radio>\n        <Radio value="left">Left</Radio>\n        <Radio value="right">Right</Radio>\n      </Radio.Group>\n      <Button\n        onClick={() => {\n          const drawerId = Drawer.add({\n            title: \'Drawer Title\',\n            placement,\n            content: (\n              <>\n                <div>Here is an example text.</div>\n                <div>Here is an example text.</div>\n              </>\n            ),\n            visible: true,\n            onCancel: () => Drawer.remove(drawerId),\n          });\n        }}\n      >\n        Open Drawer\n      </Button>\n    </Space>\n  );\n}',namespace:p.Ly},v={code:"\nimport { useDrawer, Space, Button, Checkbox } from '@mx-design/web';\n\nfunction App() {\n  const Drawer = useDrawer();\n  const [hasHeader, setHeader] = React.useState(true);\n  const [hasFooter, setFooter] = React.useState(true);\n  const [hasClose, setClose] = React.useState(true);\n  return (\n    <Space direction=\"vertical\">\n      <Space>\n        <Checkbox\n          onChange={(value) => {\n            setHeader(!value);\n          }}\n          style={{ marginRight: 20 }}\n        >\n          Hide title\n        </Checkbox>\n        <Checkbox\n          onChange={(value) => {\n            setFooter(!value);\n          }}\n          style={{ marginRight: 20 }}\n        >\n          Hide footer\n        </Checkbox>\n        <Checkbox\n          onChange={(value) => {\n            setClose(!value);\n          }}\n        >\n          Hide close icon\n        </Checkbox>\n      </Space>\n      <Button\n        onClick={() => {\n          const drawerId = Drawer.add({\n            title: hasHeader ? 'Drawer Title' : null,\n            footer: hasFooter ? <Button>Ok</Button> : null,\n            showCloseIcon: hasClose,\n            content: (\n              <>\n                <div>Here is an example text.</div>\n                <div>Here is an example text.</div>\n              </>\n            ),\n            visible: true,\n            onCancel: () => Drawer.remove(drawerId),\n          });\n        }}\n      >\n        Open Drawer\n      </Button>\n    </Space>\n  );\n}",namespace:p.rm},f={code:"\nimport { useDrawer, Button } from '@mx-design/web';\n\nfunction App() {\n  const Drawer = useDrawer();\n  return (\n    <Button\n      onClick={() => {\n        const drawerId = Drawer.add({\n          title: 'Drawer Title',\n          width: 600,\n          content: (\n            <Button\n              onClick={() => {\n                const drawerId = Drawer.add({\n                  title: 'Drawer Title',\n                  content: (\n                    <>\n                      <div>Here is an example text.</div>\n                      <div>Here is an example text.</div>\n                    </>\n                  ),\n                  visible: true,\n                  onCancel: () => Drawer.remove(drawerId),\n                });\n              }}\n            >\n              Open Drawer\n            </Button>\n          ),\n          visible: true,\n          onCancel: () => Drawer.remove(drawerId),\n        });\n      }}\n    >\n      Open Drawer\n    </Button>\n  );\n}",namespace:p.Sd},D={code:"\nimport { useDrawer, Button } from '@mx-design/web';\n\nfunction App() {\n  const Drawer = useDrawer();\n  const refWrapper = React.useRef(null);\n  const wrapperStyle = {\n    width: '100%',\n    height: 300,\n    backgroundColor: 'var(--bg-color-page)',\n    position: 'relative',\n    overflow: 'hidden',\n    textAlign: 'center',\n  };\n  return (\n    <div ref={refWrapper} style={wrapperStyle}>\n      <Button\n        style={{ marginTop: 120 }}\n        onClick={() => {\n          const drawerId = Drawer.add({\n            title: 'Drawer Title',\n            width: 200,\n            getMountContainer: () => refWrapper && refWrapper.current,\n            content: <div style={{ textAlign: 'left' }}>Here is an example text.</div>,\n            visible: true,\n            onCancel: () => Drawer.remove(drawerId),\n          });\n        }}\n      >\n        Open Drawer\n      </Button>\n    </div>\n  );\n}",namespace:p.rr},b=(r={},(0,o.Z)(r,w.namespace,w),(0,o.Z)(r,m.namespace,m),(0,o.Z)(r,v.namespace,v),(0,o.Z)(r,f.namespace,f),(0,o.Z)(r,D.namespace,D),r);function h(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function x(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?h(Object(t),!0).forEach((function(n){(0,o.Z)(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):h(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}const g=function(){var e=(0,u.b)({namespace:l.vU}),n=(0,i.Z)(e,1)[0],t=(0,c.useMemo)((function(){return Object.keys(n).map((function(e){return x(x({},n[e]),b[e])}))}),[n,b]),r=(0,c.useMemo)((function(){return t.map((function(e){return{title:e.title,href:"#".concat(e.namespace)}}))}),[t]);return c.createElement(s.Z,{titleList:r},t.map((function(e){return c.createElement(d.AN,(0,a.Z)({key:e.namespace},e))})))}}}]);