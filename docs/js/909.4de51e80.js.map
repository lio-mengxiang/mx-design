{"version":3,"file":"js/909.4de51e80.js","mappings":"oPA4BaA,EAAQ,CACnBC,KA3BW,uiBA4BXC,UAAWC,EAAAA,ICQAC,EAAW,CACtBH,KArCW,4/BAsCXC,UAAWG,EAAAA,ICoBAC,EAAoB,CAC/BL,KA3DW,q+CA4DXC,UAAWK,EAAAA,ICpBAC,EAAa,CACxBP,KAzCW,s+BA0CXC,UAAWO,EAAAA,ICPAC,EAAQ,CACnBT,KApCW,y5BAqCXC,UAAWS,EAAAA,IChCAC,GAAWC,EAAG,CAAC,GAAJC,EAAAA,EAAAA,GAAAD,EACrBb,EAAME,UAAYF,IAAKc,EAAAA,EAAAA,GAAAD,EACvBT,EAASF,UAAYE,IAAQU,EAAAA,EAAAA,GAAAD,EAC7BP,EAAkBJ,UAAYI,IAAiBQ,EAAAA,EAAAA,GAAAD,EAC/CL,EAAWN,UAAYM,IAAUM,EAAAA,EAAAA,GAAAD,EACjCH,EAAMR,UAAYQ,GAAKG,G,qkBCuB1B,QA5BA,WACE,IAAAE,GAAgBC,EAAAA,EAAAA,GAA6B,CAAEd,UAAWe,EAAAA,KAAnDC,GAAgEC,EAAAA,EAAAA,GAAAJ,EAAA,GAA3D,GACNK,GAAWC,EAAAA,EAAAA,UACf,kBACEC,OAAOC,KAAKL,GAAOM,KAAI,SAACC,GAAG,OAAAC,EAAAA,EAAA,GACtBR,EAAMO,IACNb,EAAYa,GAAI,GAClB,GACL,CAACP,EAAON,IAGJe,GAAYN,EAAAA,EAAAA,UAChB,kBACED,EAASI,KAAI,SAACI,GAAI,MAAM,CACtBC,MAAOD,EAAKC,MACZC,KAAM,IAAFC,OAAMH,EAAK1B,WAChB,GAAE,GACL,CAACkB,IAGH,OACEY,EAAAA,cAACC,EAAAA,EAAoB,CAACN,UAAWA,GAC9BP,EAASI,KAAI,SAACU,GAAI,OACjBF,EAAAA,cAACG,EAAAA,IAAkBC,EAAAA,EAAAA,GAAA,CAACX,IAAKS,EAAKhC,WAAegC,GAAQ,IAI7D,C","sources":["webpack://@mx-design/example/./src/pages/drawer/examples/basic.tsx","webpack://@mx-design/example/./src/pages/drawer/examples/position.tsx","webpack://@mx-design/example/./src/pages/drawer/examples/customizedElement.tsx","webpack://@mx-design/example/./src/pages/drawer/examples/multiLayer.tsx","webpack://@mx-design/example/./src/pages/drawer/examples/mount.tsx","webpack://@mx-design/example/./src/pages/drawer/examples/index.ts","webpack://@mx-design/example/./src/pages/drawer/index.tsx"],"sourcesContent":["import { Basic } from '../locale';\n\nconst code = `\nimport { useDrawer, Button } from '@mx-design/web';\n\nfunction App() {\n  const Drawer = useDrawer();\n  return (\n    <Button\n      onClick={() => {\n        const drawerId = Drawer.add({\n          title: 'Drawer Title',\n          content: (\n            <>\n              <div>Here is an example text.</div>\n              <div>Here is an example text.</div>\n            </>\n          ),\n          visible: true,\n          onCancel: () => Drawer.remove(drawerId),\n        });\n      }}\n    >\n      Open Drawer\n    </Button>\n  );\n}`;\n\nexport const basic = {\n  code,\n  namespace: Basic,\n};\n","import { Position } from '../locale';\n\nconst code = `\nimport { useDrawer, Space, Button, Radio } from '@mx-design/web';\n\nfunction App() {\n  const Drawer = useDrawer();\n  const [placement, setPlacement] = React.useState('right');\n  return (\n    <Space direction=\"vertical\">\n      <Radio.Group name=\"placement\" defaultValue={placement} onChange={setPlacement}>\n        <Radio value=\"top\">Top</Radio>\n        <Radio value=\"bottom\">Bottom</Radio>\n        <Radio value=\"left\">Left</Radio>\n        <Radio value=\"right\">Right</Radio>\n      </Radio.Group>\n      <Button\n        onClick={() => {\n          const drawerId = Drawer.add({\n            title: 'Drawer Title',\n            placement,\n            content: (\n              <>\n                <div>Here is an example text.</div>\n                <div>Here is an example text.</div>\n              </>\n            ),\n            visible: true,\n            onCancel: () => Drawer.remove(drawerId),\n          });\n        }}\n      >\n        Open Drawer\n      </Button>\n    </Space>\n  );\n}`;\n\nexport const position = {\n  code,\n  namespace: Position,\n};\n","import { CustomizedElement } from '../locale';\n\nconst code = `\nimport { useDrawer, Space, Button, Checkbox } from '@mx-design/web';\n\nfunction App() {\n  const Drawer = useDrawer();\n  const [hasHeader, setHeader] = React.useState(true);\n  const [hasFooter, setFooter] = React.useState(true);\n  const [hasClose, setClose] = React.useState(true);\n  return (\n    <Space direction=\"vertical\">\n      <Space>\n        <Checkbox\n          onChange={(value) => {\n            setHeader(!value);\n          }}\n          style={{ marginRight: 20 }}\n        >\n          Hide title\n        </Checkbox>\n        <Checkbox\n          onChange={(value) => {\n            setFooter(!value);\n          }}\n          style={{ marginRight: 20 }}\n        >\n          Hide footer\n        </Checkbox>\n        <Checkbox\n          onChange={(value) => {\n            setClose(!value);\n          }}\n        >\n          Hide close icon\n        </Checkbox>\n      </Space>\n      <Button\n        onClick={() => {\n          const drawerId = Drawer.add({\n            title: hasHeader ? 'Drawer Title' : null,\n            footer: hasFooter ? <Button>Ok</Button> : null,\n            showCloseIcon: hasClose,\n            content: (\n              <>\n                <div>Here is an example text.</div>\n                <div>Here is an example text.</div>\n              </>\n            ),\n            visible: true,\n            onCancel: () => Drawer.remove(drawerId),\n          });\n        }}\n      >\n        Open Drawer\n      </Button>\n    </Space>\n  );\n}`;\n\nexport const customizedElement = {\n  code,\n  namespace: CustomizedElement,\n};\n","import { MultiLayer } from '../locale';\n\nconst code = `\nimport { useDrawer, Button } from '@mx-design/web';\n\nfunction App() {\n  const Drawer = useDrawer();\n  return (\n    <Button\n      onClick={() => {\n        const drawerId = Drawer.add({\n          title: 'Drawer Title',\n          width: 600,\n          content: (\n            <Button\n              onClick={() => {\n                const drawerId = Drawer.add({\n                  title: 'Drawer Title',\n                  content: (\n                    <>\n                      <div>Here is an example text.</div>\n                      <div>Here is an example text.</div>\n                    </>\n                  ),\n                  visible: true,\n                  onCancel: () => Drawer.remove(drawerId),\n                });\n              }}\n            >\n              Open Drawer\n            </Button>\n          ),\n          visible: true,\n          onCancel: () => Drawer.remove(drawerId),\n        });\n      }}\n    >\n      Open Drawer\n    </Button>\n  );\n}`;\n\nexport const multiLayer = {\n  code,\n  namespace: MultiLayer,\n};\n","import { Mount } from '../locale';\n\nconst code = `\nimport { useDrawer, Button } from '@mx-design/web';\n\nfunction App() {\n  const Drawer = useDrawer();\n  const refWrapper = React.useRef(null);\n  const wrapperStyle = {\n    width: '100%',\n    height: 300,\n    backgroundColor: 'var(--bg-color-page)',\n    position: 'relative',\n    overflow: 'hidden',\n    textAlign: 'center',\n  };\n  return (\n    <div ref={refWrapper} style={wrapperStyle}>\n      <Button\n        style={{ marginTop: 120 }}\n        onClick={() => {\n          const drawerId = Drawer.add({\n            title: 'Drawer Title',\n            width: 200,\n            getMountContainer: () => refWrapper && refWrapper.current,\n            content: <div style={{ textAlign: 'left' }}>Here is an example text.</div>,\n            visible: true,\n            onCancel: () => Drawer.remove(drawerId),\n          });\n        }}\n      >\n        Open Drawer\n      </Button>\n    </div>\n  );\n}`;\n\nexport const mount = {\n  code,\n  namespace: Mount,\n};\n","import { basic } from './basic';\nimport { position } from './position';\nimport { customizedElement } from './customizedElement';\nimport { multiLayer } from './multiLayer';\nimport { mount } from './mount';\n// import { update } from './update';\n\nexport const exampleList = {\n  [basic.namespace]: basic,\n  [position.namespace]: position,\n  [customizedElement.namespace]: customizedElement,\n  [multiLayer.namespace]: multiLayer,\n  [mount.namespace]: mount,\n  // [update.namespace]: update,\n};\n","import React, { useMemo } from 'react';\nimport ComponentInnerLayout from '@/components/Layout/ComponentInnerLayout';\nimport { DRAWER_KEY } from '@/constants';\nimport { useLocale } from '@/locale/useLocal/useLocal';\nimport { ComponentCodeBlock } from '@/components/DemoBlock';\nimport { exampleList } from './examples';\n\nfunction DrawerExample() {\n  const [local] = useLocale<typeof DRAWER_KEY>({ namespace: DRAWER_KEY });\n  const dataList = useMemo(\n    () =>\n      Object.keys(local).map((key) => ({\n        ...local[key],\n        ...exampleList[key],\n      })),\n    [local, exampleList]\n  );\n\n  const titleList = useMemo(\n    () =>\n      dataList.map((item) => ({\n        title: item.title,\n        href: `#${item.namespace}`,\n      })),\n    [dataList]\n  );\n\n  return (\n    <ComponentInnerLayout titleList={titleList}>\n      {dataList.map((data) => (\n        <ComponentCodeBlock key={data.namespace} {...data} />\n      ))}\n    </ComponentInnerLayout>\n  );\n}\nexport default DrawerExample;\n"],"names":["basic","code","namespace","Basic","position","Position","customizedElement","CustomizedElement","multiLayer","MultiLayer","mount","Mount","exampleList","_exampleList","_defineProperty","_useLocale","useLocale","DRAWER_KEY","local","_slicedToArray","dataList","useMemo","Object","keys","map","key","_objectSpread","titleList","item","title","href","concat","React","ComponentInnerLayout","data","ComponentCodeBlock","_extends"],"sourceRoot":""}