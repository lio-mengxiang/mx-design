{"version":3,"file":"js/419.63018057.js","mappings":"uNAaaA,EAAQ,CACnBC,KAZW,wMAaXC,UAAWC,EAAAA,ICCAC,EAAc,CACzBH,KAfW,6ZAgBXC,UAAWG,EAAAA,ICGAC,EAAmB,CAC9BL,KApBW,mgBAqBXC,UAAWK,EAAAA,ICkHAC,EAAW,CACtBP,KAxIW,+rHAyIXC,UAAWO,EAAAA,IC/FAC,EAAgB,CAC3BT,KA3CW,gyCA4CXC,UAAWS,EAAAA,IC/BAC,EAAa,CACxBX,KAdW,gWAeXC,UAAWW,EAAAA,ICEAC,EAAQ,CACnBb,KAlBW,yWAmBXC,UAAWa,EAAAA,ICRAC,EAAW,CACtBf,KAZW,kOAaXC,UAAWe,EAAAA,ICUAC,EAAU,CACrBjB,KAxBW,6xBAyBXC,UAAWiB,EAAAA,ICjBAC,GAAWC,EAAG,CAAC,GAAJC,EAAAA,EAAAA,GAAAD,EACrBrB,EAAME,UAAYF,IAAKsB,EAAAA,EAAAA,GAAAD,EACvBjB,EAAYF,UAAYE,IAAWkB,EAAAA,EAAAA,GAAAD,EACnCf,EAAiBJ,UAAYI,IAAgBgB,EAAAA,EAAAA,GAAAD,EAC7CL,EAASd,UAAYc,IAAQM,EAAAA,EAAAA,GAAAD,EAC7Bb,EAASN,UAAYM,IAAQc,EAAAA,EAAAA,GAAAD,EAC7BX,EAAcR,UAAYQ,IAAaY,EAAAA,EAAAA,GAAAD,EACvCT,EAAWV,UAAYU,IAAUU,EAAAA,EAAAA,GAAAD,EACjCP,EAAMZ,UAAYY,IAAKQ,EAAAA,EAAAA,GAAAD,EACvBH,EAAQhB,UAAYgB,GAAOG,G,ylBCiB9B,QA7BA,WACE,IAAAE,GAAgBC,EAAAA,EAAAA,GAA4B,CAAEtB,UAAWuB,EAAAA,KAAlDC,GAA8DC,EAAAA,EAAAA,GAAAJ,EAAA,GAAzD,GACNK,GAAWC,EAAAA,EAAAA,UACf,kBACEC,OAAOC,KAAKL,GAAOM,KAAI,SAACC,GAAG,OAAAC,EAAAA,EAAA,CACzBD,IAAAA,GACGP,EAAMO,IACNb,EAAYa,GAAI,GAClB,GACL,CAACP,EAAON,IAGJe,GAAYN,EAAAA,EAAAA,UAChB,kBACED,EAASI,KAAI,SAACI,GAAI,MAAM,CACtBC,MAAOD,EAAKC,MACZC,KAAM,IAAFC,OAAMH,EAAKH,KAChB,GAAE,GACL,CAACL,IAEH,OACEY,EAAAA,cAACC,EAAAA,EAAoB,CAACN,UAAWA,GAC9BP,EAASI,KAAI,SAACU,GAAI,OACjBF,EAAAA,cAACG,EAAAA,GAAuBD,EAAQ,IAIxC,C","sources":["webpack://@mx-design/example/./src/pages/popup/examples/basic.tsx","webpack://@mx-design/example/./src/pages/popup/examples/triggerMode.tsx","webpack://@mx-design/example/./src/pages/popup/examples/differentTrigger.tsx","webpack://@mx-design/example/./src/pages/popup/examples/position.tsx","webpack://@mx-design/example/./src/pages/popup/examples/floatingLayer.tsx","webpack://@mx-design/example/./src/pages/popup/examples/controlled.tsx","webpack://@mx-design/example/./src/pages/popup/examples/mount.tsx","webpack://@mx-design/example/./src/pages/popup/examples/disabled.tsx","webpack://@mx-design/example/./src/pages/popup/examples/dynamic.tsx","webpack://@mx-design/example/./src/pages/popup/examples/index.ts","webpack://@mx-design/example/./src/pages/popup/index.tsx"],"sourcesContent":["import { Basic } from '../locale';\n\nconst code = `\nimport { Popup, Button } from '@mx-design/web';\n\nfunction App() {\n  return (\n    <Popup trigger=\"hover\" content=\"This is a popup box\">\n      <Button>Hover me</Button>\n    </Popup>\n  )\n}`;\n\nexport const basic = {\n  code,\n  namespace: Basic,\n};\n","import { TriggerMode } from '../locale';\n\nconst code = `\nimport { Popup, Button } from '@mx-design/web';\n\nfunction App() {\n  return (\n    <Space>\n      <Popup trigger=\"hover\" showArrow content=\"This is a popup box\">\n        <Button variant=\"outline\">Default child element to trigger</Button>\n      </Popup>\n      <Popup triggerElement={<Button>use triggerElement to trigger</Button>} showArrow content=\"This is a popup box\"></Popup>\n    </Space>\n  );\n}`;\n\nexport const triggerMode = {\n  code,\n  namespace: TriggerMode,\n};\n","import { DifferentTrigger } from '../locale';\n\nconst code = `\nimport { Popup, Button } from '@mx-design/web';\n\nfunction App() {\n  return (\n    <Space>\n      <Popup trigger=\"hover\" showArrow content=\"Hover me\">\n        <Button>Hover me</Button>\n      </Popup>\n      <Popup trigger=\"click\" showArrow content=\"Click me\">\n        <Button onClick={() => console.log('Custom events')}>Click me</Button>\n      </Popup>\n      <Popup trigger=\"context-menu\" showArrow content=\"Right click\">\n        <Button>Right click</Button>\n      </Popup>\n    </Space>\n  );\n}`;\n\nexport const differentTrigger = {\n  code,\n  namespace: DifferentTrigger,\n};\n","import { Position } from '../locale';\n\nconst code = `\nimport { Popup, Button } from '@mx-design/web';\n\nfunction App() {\n  const styles = {\n    container: {\n      margin: '0 auto',\n      width: '500px',\n      height: '260px',\n      position: 'relative',\n    },\n    placementTop: {\n      position: 'absolute',\n      top: '0',\n      left: '42%',\n    },\n    placementTopLeft: {\n      position: 'absolute',\n      top: '0',\n      left: '70px',\n    },\n    placementTopRight: {\n      position: 'absolute',\n      top: '0',\n      right: '70px',\n    },\n    placementBottom: {\n      position: 'absolute',\n      bottom: '0',\n      left: '42%',\n    },\n    placementBottomLeft: {\n      position: 'absolute',\n      bottom: '0',\n      left: '70px',\n      width: '120px',\n    },\n    placementBottomRight: {\n      position: 'absolute',\n      bottom: '0',\n      right: '70px',\n    },\n    placementLeft: {\n      position: 'absolute',\n      left: '0',\n      top: '42%',\n    },\n    placementLeftTop: {\n      position: 'absolute',\n      left: '0',\n      top: '50px',\n    },\n    placementLeftBottom: {\n      position: 'absolute',\n      left: '0',\n      bottom: '50px',\n    },\n    placementRight: {\n      position: 'absolute',\n      right: '0',\n      top: '42%',\n    },\n    placementRightTop: {\n      position: 'absolute',\n      right: '0',\n      top: '50px',\n    },\n    placementRightBottom: {\n      position: 'absolute',\n      right: '0',\n      bottom: '50px',\n    },\n  };\n  return (\n    <div style={styles.container}>\n      <Popup content=\"这是Popup内容\" placement=\"top\" showArrow>\n        <Button style={styles.placementTop}>top</Button>\n      </Popup>\n      <Popup content=\"这是Popup内容 top-start\" placement=\"top-start\" showArrow>\n        <Button style={styles.placementTopLeft}>top-start</Button>\n      </Popup>\n      <Popup content=\"这是Popup内容 top-end\" placement=\"top-end\" showArrow>\n        <Button style={styles.placementTopRight}>top-end</Button>\n      </Popup>\n      <Popup content=\"这是Popup内容\" placement=\"bottom\" showArrow>\n        <Button style={styles.placementBottom}>bottom</Button>\n      </Popup>\n      <Popup content=\"这是Popup内容 bottom-start\" placement=\"bottom-start\" showArrow>\n        <Button style={styles.placementBottomLeft}>bottom-start</Button>\n      </Popup>\n      <Popup content=\"这是Popup内容 bottom-end\" placement=\"bottom-end\" showArrow>\n        <Button style={styles.placementBottomRight}>bottom-end</Button>\n      </Popup>\n      <Popup content=\"这是Popup内容\" placement=\"left\" showArrow>\n        <Button style={styles.placementLeft}>left</Button>\n      </Popup>\n      <Popup\n        content=\"这是Popup内容   left-start\"\n        placement=\"left-start\"\n        overlayStyle={{ width: '140px' }}\n        showArrow\n      >\n        <Button style={styles.placementLeftTop}>left-start</Button>\n      </Popup>\n      <Popup\n        content=\"这是Popup内容 left-end\"\n        placement=\"left-end\"\n        overlayStyle={{ width: '140px' }}\n        showArrow\n      >\n        <Button style={styles.placementLeftBottom}>left-end</Button>\n      </Popup>\n      <Popup content=\"这是Popup内容\" placement=\"right\" showArrow>\n        <Button style={styles.placementRight}>right</Button>\n      </Popup>\n      <Popup\n        content=\"这是Popup内容 right-start\"\n        placement=\"right-start\"\n        overlayStyle={{ width: '140px' }}\n        showArrow\n      >\n        <Button style={styles.placementRightTop}>right-start</Button>\n      </Popup>\n      <Popup\n        content=\"这是Popup内容 right-end\"\n        placement=\"right-end\"\n        overlayStyle={{ width: '140px' }}\n        showArrow\n      >\n        <Button style={styles.placementRightBottom}>right-end</Button>\n      </Popup>\n    </div>\n  );\n}`;\n\nexport const position = {\n  code,\n  namespace: Position,\n};\n","import { FloatingLayer } from '../locale';\n\nconst code = `\nimport { Popup, Button } from '@mx-design/web';\n\nfunction App() {\n  return (\n    <Space direction='vertical'>\n      <Space>\n        <Popup\n          content=\"浮层拥有自定义类名，可以自定义浮层样式\"\n          overlayClassName=\"custom-popup\"\n          placement=\"bottom\"\n        >\n          <Button variant=\"outline\">自定义浮层类名（Custom overlay class name）</Button>\n        </Popup>\n        <Popup\n          content=\"浮层宽度是固定的，不会随内容变化而变化（Popup width is fixed）\"\n          overlayInnerStyle={{ width: '350px', textAlign: 'center' }}\n          placement=\"bottom\"\n        >\n          <Button variant=\"outline\">固定浮层宽度（Popup width is fixed）</Button>\n        </Popup>\n      </Space>\n      <Space>\n        <Popup\n          content=\"可以设置浮层最大宽度，当内容超出最大宽度时，文本内容才会换行\"\n          overlayStyle={{ maxWidth: '250px' }}\n          placement=\"bottom\"\n        >\n          <Button variant=\"outline\">浮层最大宽度（Maximum width of popup）</Button>\n        </Popup>\n        <Popup\n          content=\"overlayInnerStyle 作为函数使用，可以让浮层内容和触发元素同宽\"\n          overlayInnerStyle={(triggerElem) => ({ width: + triggerElem.offsetWidth + 'px' })}\n          placement=\"bottom\"\n        >\n          <Button variant=\"outline\">浮层和触发元素同宽（Same width as the trigger element）</Button>\n        </Popup>\n      </Space>\n    </Space>\n  );\n}`;\n\nexport const floatingLayer = {\n  code,\n  namespace: FloatingLayer,\n};\n","import { Controlled } from '../locale';\n\nconst code = `\nimport { Popup, Button } from '@mx-design/web';\n\nfunction App() {\n  const [visible, setVisible] = React.useState(true);\n\n  return (\n    <Popup content=\"This is the popup content\" trigger=\"context-menu\" placement=\"right\" visible={visible}>\n      <Button onClick={()=> setVisible(!visible)}>一直显示(Always show)</Button>\n    </Popup>\n  );\n}`;\n\nexport const controlled = {\n  code,\n  namespace: Controlled,\n};\n","import { Mount } from '../locale';\n\nconst code = `\nimport { Popup, Button } from '@mx-design/web';\n\nfunction App() {\n  return (\n    <Space>\n      <Popup\n        trigger=\"click\"\n        content=\"通过id选择器选择父节点(Select parent node by id selector)\"\n        attach='#app'\n      >\n        <Button>点击查看id为app的元素(Click to view the element whose id is app)</Button>\n      </Popup>\n    </Space>\n  );\n}`;\n\nexport const mount = {\n  code,\n  namespace: Mount,\n};\n","import { Disabled } from '../locale';\n\nconst code = `\nimport { Popup, Button } from '@mx-design/web';\n\nfunction App() {\n  return (\n    <Popup trigger=\"hover\" disabled showArrow content=\"This is the popup content\">\n      <Button>Hover me</Button>\n    </Popup>\n  );\n}`;\n\nexport const disabled = {\n  code,\n  namespace: Disabled,\n};\n","import { Dynamic } from '../locale';\n\nconst code = `\nimport { Popup, Button } from '@mx-design/web';\n\nfunction App() {\n  const [visible] = React.useState(true);\n  const [spanVisible, setVisible] = React.useState(false);\n  const [content, setContent] = React.useState('This is the popup content');\n  const btnClicksRef = React.useRef(0);\n\n  const toggleContent = () => {\n    btnClicksRef.current += 1;\n    const showMore = btnClicksRef.current % 2 !== 0;\n    setVisible(showMore);\n    setContent(\\`This is the popup content\\${showMore ? '，There are many, many, many, many....' : ''}\\`);\n  };\n\n  return (\n    <Popup content={content} trigger=\"context-menu\" placement=\"right\" visible={visible}>\n      <Button onClick={toggleContent}>Click to change content{spanVisible && <span>，click again</span>}</Button>\n    </Popup>\n  );\n}`;\n\nexport const dynamic = {\n  code,\n  namespace: Dynamic,\n};\n","import { basic } from './basic';\nimport { triggerMode } from './triggerMode';\nimport { differentTrigger } from './differentTrigger';\nimport { position } from './position';\nimport { floatingLayer } from './floatingLayer';\nimport { controlled } from './controlled';\nimport { mount } from './mount';\nimport { disabled } from './disabled';\nimport { dynamic } from './dynamic';\n\nexport const exampleList = {\n  [basic.namespace]: basic,\n  [triggerMode.namespace]: triggerMode,\n  [differentTrigger.namespace]: differentTrigger,\n  [disabled.namespace]: disabled,\n  [position.namespace]: position,\n  [floatingLayer.namespace]: floatingLayer,\n  [controlled.namespace]: controlled,\n  [mount.namespace]: mount,\n  [dynamic.namespace]: dynamic,\n};\n","import React, { useMemo } from 'react';\nimport ComponentInnerLayout from '@/components/Layout/ComponentInnerLayout';\nimport { useLocale } from '@/locale/useLocal/useLocal';\nimport { exampleList } from './examples';\nimport { POPUP_KEY } from '@/constants';\nimport { ComponentCodeBlock } from '@/components/DemoBlock';\n\nfunction PopupExample() {\n  const [local] = useLocale<typeof POPUP_KEY>({ namespace: POPUP_KEY });\n  const dataList = useMemo(\n    () =>\n      Object.keys(local).map((key) => ({\n        key,\n        ...local[key],\n        ...exampleList[key],\n      })),\n    [local, exampleList]\n  );\n\n  const titleList = useMemo(\n    () =>\n      dataList.map((item) => ({\n        title: item.title,\n        href: `#${item.key}`,\n      })),\n    [dataList]\n  );\n  return (\n    <ComponentInnerLayout titleList={titleList}>\n      {dataList.map((data) => (\n        <ComponentCodeBlock {...data} />\n      ))}\n    </ComponentInnerLayout>\n  );\n}\n\nexport default PopupExample;\n"],"names":["basic","code","namespace","Basic","triggerMode","TriggerMode","differentTrigger","DifferentTrigger","position","Position","floatingLayer","FloatingLayer","controlled","Controlled","mount","Mount","disabled","Disabled","dynamic","Dynamic","exampleList","_exampleList","_defineProperty","_useLocale","useLocale","POPUP_KEY","local","_slicedToArray","dataList","useMemo","Object","keys","map","key","_objectSpread","titleList","item","title","href","concat","React","ComponentInnerLayout","data","ComponentCodeBlock"],"sourceRoot":""}