"use strict";(self.webpackChunk_mx_design_example=self.webpackChunk_mx_design_example||[]).push([[767],{9816:(n,e,s)=>{s.r(e),s.d(e,{default:()=>S});var t,a=s(2798),o=s(9641),c=s(7059),i=s(2983),u=s(9157),p=s(5037),r=s(8060),g=s(7119),m=s(9721),d={code:"\nimport { useMessage, Button } from '@mx-design/web';\n\nfunction App() {\n  const Message = useMessage();\n  return (\n    <Button\n      onClick={() => {\n        Message.add({\n          type: 'info',\n          content: 'This is an info message!'\n        });\n      }}\n    >\n      Open Message\n    </Button>\n  );\n};",namespace:m.Bb},f={code:"\nimport { useMessage, Space, Button } from '@mx-design/web';\n\nfunction App() {\n  const Message = useMessage();\n  return (\n    <Space>\n      <Button\n        onClick={() => {\n          Message.add({\n            type: 'info',\n            content: 'This is an info message!',\n          });\n        }}\n      >\n        Info Message\n      </Button>\n      <Button\n        onClick={() => {\n          Message.add({\n            type: 'warning',\n            content: 'This is an warning message!',\n          });\n        }}\n        status=\"warning\"\n      >\n        Warning Message\n      </Button>\n      <Button\n        onClick={() => {\n          Message.add({\n            type: 'success',\n            content: 'This is an success message!',\n          });\n        }}\n        status=\"success\"\n      >\n        Success Message\n      </Button>\n      <Button\n        onClick={() => {\n          Message.add({\n            type: 'error',\n            content: 'This is an error message!',\n          });\n        }}\n        status=\"error\"\n      >\n        Error Message\n      </Button>\n      <Button\n        onClick={() => {\n          Message.add({\n            type: 'loading',\n            content: 'This is an loading message!',\n          });\n        }}\n        status=\"default\"\n      >\n        Loading Message\n      </Button>\n    </Space>\n  );\n};",namespace:m.L9},l={code:"\nimport { useMessage, Space, Button, IconSmile, IconSun } from '@mx-design/web';\n\nfunction App() {\n  const Message = useMessage();\n  return (\n    <Space>\n      <Button\n        onClick={() => {\n          Message.add({\n            type: 'info',\n            icon: <IconSmile />,\n            content: 'This is an info message!',\n          });\n        }}\n      >\n        Info Message\n      </Button>\n      <Button\n        onClick={() => {\n          Message.add({\n            type: 'warning',\n            icon: <IconStop />,\n            content: 'This is an warning message!',\n          });\n        }}\n        status=\"warning\"\n      >\n        Warning Message\n      </Button>\n      <Button\n        onClick={() => {\n          Message.add({\n            type: 'success',\n            icon: <IconSun />,\n            content: 'This is an success message!',\n          });\n        }}\n        status=\"success\"\n      >\n        Success Message\n      </Button>\n    </Space>\n  );\n};",namespace:m.$4},M={code:"\nimport { useMessage, Button, Space } from '@mx-design/web';\n\nfunction App() {\n  const Message = useMessage();\n  return (\n    <Space>\n      <Button\n        onClick={() => {\n          Message.add({\n            id: 'aa',\n            type: 'info',\n            content: 'This is an info message!',\n          });\n        }}\n      >\n        Open Message\n      </Button>\n      <Button\n        status=\"default\"\n        onClick={() => {\n          Message.remove('aa');\n        }}\n      >\n        Close Message\n      </Button>\n    </Space>\n  );\n}",namespace:m.x8},B={code:"\nimport { useMessage, Button } from '@mx-design/web';\n\nfunction App() {\n  const Message = useMessage();\n  return (\n    <Space direction=\"vertical\">\n      <Space>\n        <Button\n          status=\"warning\"\n          onClick={() => {\n            Message.add({\n              type: 'warning',\n              position: 'top-left',\n              content: 'This is an info message!',\n            });\n          }}\n        >\n          Top Left\n        </Button>\n        <Button\n          status=\"success\"\n          onClick={() => {\n            Message.add({\n              type: 'success',\n              position: 'top',\n              content: 'This is an info message!',\n            });\n          }}\n        >\n          Top\n        </Button>\n        <Button\n          status=\"default\"\n          onClick={() => {\n            Message.add({\n              type: 'loading',\n              position: 'top-right',\n              content: 'This is an info message!',\n            });\n          }}\n        >\n          Top Right\n        </Button>\n      </Space>\n      <Space>\n        <Button\n          status=\"warning\"\n          onClick={() => {\n            Message.add({\n              type: 'warning',\n              position: 'bottom-left',\n              content: 'This is an info message!',\n            });\n          }}\n        >\n          Bottom Left\n        </Button>\n        <Button\n          status=\"success\"\n          onClick={() => {\n            Message.add({\n              type: 'success',\n              position: 'bottom',\n              content: 'This is an info message!',\n            });\n          }}\n        >\n          Bottom\n        </Button>\n        <Button\n          status=\"default\"\n          onClick={() => {\n            Message.add({\n              type: 'loading',\n              position: 'bottom-right',\n              content: 'This is an info message!',\n            });\n          }}\n        >\n          Bottom Right\n        </Button>\n      </Space>\n    </Space>\n  );\n}",namespace:m.Ly},y={code:"\nimport { useMessage, Button } from '@mx-design/web';\n\nfunction App() {\n  const Message = useMessage();\n  return (\n    <Button\n      onClick={() => {\n        Message.add({\n          type: 'info',\n          closable: true,\n          showIcon: false,\n          content: 'This is an info message!'\n        });\n      }}\n    >\n      Open Message\n    </Button>\n  );\n};",namespace:m.U1},b={code:"\nimport { useMessage, Button } from '@mx-design/web';\n\nfunction App() {\n  const Message = useMessage();\n\n  function updateMessage() {\n    const id = Message.add({\n      type: 'loading',\n      content: 'Will update after 1 seconds...',\n    });\n    setTimeout(() => {\n      Message.update(id, {\n        type: 'success',\n        content: 'Update success!',\n      });\n    },1000);\n  }\n\n  return (\n    <Button onClick={updateMessage}>\n      Update message\n    </Button>\n  );\n};",namespace:m.BN},h=(t={},(0,o.Z)(t,d.namespace,d),(0,o.Z)(t,f.namespace,f),(0,o.Z)(t,l.namespace,l),(0,o.Z)(t,b.namespace,b),(0,o.Z)(t,M.namespace,M),(0,o.Z)(t,B.namespace,B),(0,o.Z)(t,y.namespace,y),t);function k(n,e){var s=Object.keys(n);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(n);e&&(t=t.filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),s.push.apply(s,t)}return s}function w(n){for(var e=1;e<arguments.length;e++){var s=null!=arguments[e]?arguments[e]:{};e%2?k(Object(s),!0).forEach((function(e){(0,o.Z)(n,e,s[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(s)):k(Object(s)).forEach((function(e){Object.defineProperty(n,e,Object.getOwnPropertyDescriptor(s,e))}))}return n}const S=function(){var n=(0,r.b)({namespace:p.pf}),e=(0,c.Z)(n,1)[0],s=(0,i.useMemo)((function(){return Object.keys(e).map((function(n){return w(w({},e[n]),h[n])}))}),[e,h]),t=(0,i.useMemo)((function(){return s.map((function(n){return{title:n.title,href:"#".concat(n.namespace)}}))}),[s]);return i.createElement(u.Z,{titleList:t},s.map((function(n){return i.createElement(g.AN,(0,a.Z)({key:n.namespace},n))})))}}}]);