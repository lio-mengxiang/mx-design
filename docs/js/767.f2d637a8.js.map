{"version":3,"file":"js/767.f2d637a8.js","mappings":"qPAqBaA,EAAQ,CACnBC,KApBW,yUAqBXC,UAAWC,EAAAA,IC4CAC,EAAY,CACvBH,KAlEW,o3CAmEXC,UAAWG,EAAAA,ICrBAC,EAAS,CACpBL,KA/CW,q/BAgDXC,UAAWK,EAAAA,IClBAC,EAAQ,CACnBP,KA/BW,yjBAgCXC,UAAWO,EAAAA,ICuDAC,EAAW,CACtBT,KAxFW,qhEAyFXC,UAAWS,EAAAA,ICpEAC,EAAY,CACvBX,KAtBW,gYAuBXC,UAAWW,EAAAA,ICGAC,EAAS,CACpBb,KA3BW,mfA4BXC,UAAWa,EAAAA,ICtBAC,GAAWC,EAAG,CAAC,GAAJC,EAAAA,EAAAA,GAAAD,EACrBjB,EAAME,UAAYF,IAAKkB,EAAAA,EAAAA,GAAAD,EACvBb,EAAUF,UAAYE,IAASc,EAAAA,EAAAA,GAAAD,EAC/BX,EAAOJ,UAAYI,IAAMY,EAAAA,EAAAA,GAAAD,EACzBH,EAAOZ,UAAYY,IAAMI,EAAAA,EAAAA,GAAAD,EACzBT,EAAMN,UAAYM,IAAKU,EAAAA,EAAAA,GAAAD,EACvBP,EAASR,UAAYQ,IAAQQ,EAAAA,EAAAA,GAAAD,EAC7BL,EAAUV,UAAYU,GAASK,G,qkBCoBlC,QA5BA,WACE,IAAAE,GAAgBC,EAAAA,EAAAA,GAA8B,CAAElB,UAAWmB,EAAAA,KAApDC,GAAkEC,EAAAA,EAAAA,GAAAJ,EAAA,GAA7D,GACNK,GAAWC,EAAAA,EAAAA,UACf,kBACEC,OAAOC,KAAKL,GAAOM,KAAI,SAACC,GAAG,OAAAC,EAAAA,EAAA,GACtBR,EAAMO,IACNb,EAAYa,GAAI,GAClB,GACL,CAACP,EAAON,IAGJe,GAAYN,EAAAA,EAAAA,UAChB,kBACED,EAASI,KAAI,SAACI,GAAI,MAAM,CACtBC,MAAOD,EAAKC,MACZC,KAAM,IAAFC,OAAMH,EAAK9B,WAChB,GAAE,GACL,CAACsB,IAGH,OACEY,EAAAA,cAACC,EAAAA,EAAoB,CAACN,UAAWA,GAC9BP,EAASI,KAAI,SAACU,GAAI,OACjBF,EAAAA,cAACG,EAAAA,IAAkBC,EAAAA,EAAAA,GAAA,CAACX,IAAKS,EAAKpC,WAAeoC,GAAQ,IAI7D,C","sources":["webpack://@mx-design/example/./src/pages/message/examples/basic.tsx","webpack://@mx-design/example/./src/pages/message/examples/different.tsx","webpack://@mx-design/example/./src/pages/message/examples/custom.tsx","webpack://@mx-design/example/./src/pages/message/examples/close.tsx","webpack://@mx-design/example/./src/pages/message/examples/position.tsx","webpack://@mx-design/example/./src/pages/message/examples/showClose.tsx","webpack://@mx-design/example/./src/pages/message/examples/update.tsx","webpack://@mx-design/example/./src/pages/message/examples/index.ts","webpack://@mx-design/example/./src/pages/message/index.tsx"],"sourcesContent":["import { Basic } from '../locale';\n\nconst code = `\nimport { useMessage, Button } from '@mx-design/web';\n\nfunction App() {\n  const Message = useMessage();\n  return (\n    <Button\n      onClick={() => {\n        Message.add({\n          type: 'info',\n          content: 'This is an info message!'\n        });\n      }}\n    >\n      Open Message\n    </Button>\n  );\n};`;\n\nexport const basic = {\n  code,\n  namespace: Basic,\n};\n","import { Different } from '../locale';\n\nconst code = `\nimport { useMessage, Space, Button } from '@mx-design/web';\n\nfunction App() {\n  const Message = useMessage();\n  return (\n    <Space>\n      <Button\n        onClick={() => {\n          Message.add({\n            type: 'info',\n            content: 'This is an info message!',\n          });\n        }}\n      >\n        Info Message\n      </Button>\n      <Button\n        onClick={() => {\n          Message.add({\n            type: 'warning',\n            content: 'This is an warning message!',\n          });\n        }}\n        status=\"warning\"\n      >\n        Warning Message\n      </Button>\n      <Button\n        onClick={() => {\n          Message.add({\n            type: 'success',\n            content: 'This is an success message!',\n          });\n        }}\n        status=\"success\"\n      >\n        Success Message\n      </Button>\n      <Button\n        onClick={() => {\n          Message.add({\n            type: 'error',\n            content: 'This is an error message!',\n          });\n        }}\n        status=\"error\"\n      >\n        Error Message\n      </Button>\n      <Button\n        onClick={() => {\n          Message.add({\n            type: 'loading',\n            content: 'This is an loading message!',\n          });\n        }}\n        status=\"default\"\n      >\n        Loading Message\n      </Button>\n    </Space>\n  );\n};`;\n\nexport const different = {\n  code,\n  namespace: Different,\n};\n","import { Custom } from '../locale';\n\nconst code = `\nimport { useMessage, Space, Button, IconSmile, IconSun } from '@mx-design/web';\n\nfunction App() {\n  const Message = useMessage();\n  return (\n    <Space>\n      <Button\n        onClick={() => {\n          Message.add({\n            type: 'info',\n            icon: <IconSmile />,\n            content: 'This is an info message!',\n          });\n        }}\n      >\n        Info Message\n      </Button>\n      <Button\n        onClick={() => {\n          Message.add({\n            type: 'warning',\n            icon: <IconStop />,\n            content: 'This is an warning message!',\n          });\n        }}\n        status=\"warning\"\n      >\n        Warning Message\n      </Button>\n      <Button\n        onClick={() => {\n          Message.add({\n            type: 'success',\n            icon: <IconSun />,\n            content: 'This is an success message!',\n          });\n        }}\n        status=\"success\"\n      >\n        Success Message\n      </Button>\n    </Space>\n  );\n};`;\n\nexport const custom = {\n  code,\n  namespace: Custom,\n};\n","import { Close } from '../locale';\n\nconst code = `\nimport { useMessage, Button, Space } from '@mx-design/web';\n\nfunction App() {\n  const Message = useMessage();\n  return (\n    <Space>\n      <Button\n        onClick={() => {\n          Message.add({\n            id: 'aa',\n            type: 'info',\n            content: 'This is an info message!',\n          });\n        }}\n      >\n        Open Message\n      </Button>\n      <Button\n        status=\"default\"\n        onClick={() => {\n          Message.remove('aa');\n        }}\n      >\n        Close Message\n      </Button>\n    </Space>\n  );\n}`;\n\nexport const close = {\n  code,\n  namespace: Close,\n};\n","import { Position } from '../locale';\n\nconst code = `\nimport { useMessage, Button } from '@mx-design/web';\n\nfunction App() {\n  const Message = useMessage();\n  return (\n    <Space direction=\"vertical\">\n      <Space>\n        <Button\n          status=\"warning\"\n          onClick={() => {\n            Message.add({\n              type: 'warning',\n              position: 'top-left',\n              content: 'This is an info message!',\n            });\n          }}\n        >\n          Top Left\n        </Button>\n        <Button\n          status=\"success\"\n          onClick={() => {\n            Message.add({\n              type: 'success',\n              position: 'top',\n              content: 'This is an info message!',\n            });\n          }}\n        >\n          Top\n        </Button>\n        <Button\n          status=\"default\"\n          onClick={() => {\n            Message.add({\n              type: 'loading',\n              position: 'top-right',\n              content: 'This is an info message!',\n            });\n          }}\n        >\n          Top Right\n        </Button>\n      </Space>\n      <Space>\n        <Button\n          status=\"warning\"\n          onClick={() => {\n            Message.add({\n              type: 'warning',\n              position: 'bottom-left',\n              content: 'This is an info message!',\n            });\n          }}\n        >\n          Bottom Left\n        </Button>\n        <Button\n          status=\"success\"\n          onClick={() => {\n            Message.add({\n              type: 'success',\n              position: 'bottom',\n              content: 'This is an info message!',\n            });\n          }}\n        >\n          Bottom\n        </Button>\n        <Button\n          status=\"default\"\n          onClick={() => {\n            Message.add({\n              type: 'loading',\n              position: 'bottom-right',\n              content: 'This is an info message!',\n            });\n          }}\n        >\n          Bottom Right\n        </Button>\n      </Space>\n    </Space>\n  );\n}`;\n\nexport const position = {\n  code,\n  namespace: Position,\n};\n","import { ShowClose } from '../locale';\n\nconst code = `\nimport { useMessage, Button } from '@mx-design/web';\n\nfunction App() {\n  const Message = useMessage();\n  return (\n    <Button\n      onClick={() => {\n        Message.add({\n          type: 'info',\n          closable: true,\n          showIcon: false,\n          content: 'This is an info message!'\n        });\n      }}\n    >\n      Open Message\n    </Button>\n  );\n};`;\n\nexport const showClose = {\n  code,\n  namespace: ShowClose,\n};\n","import { Update } from '../locale';\n\nconst code = `\nimport { useMessage, Button } from '@mx-design/web';\n\nfunction App() {\n  const Message = useMessage();\n\n  function updateMessage() {\n    const id = Message.add({\n      type: 'loading',\n      content: 'Will update after 1 seconds...',\n    });\n    setTimeout(() => {\n      Message.update(id, {\n        type: 'success',\n        content: 'Update success!',\n      });\n    },1000);\n  }\n\n  return (\n    <Button onClick={updateMessage}>\n      Update message\n    </Button>\n  );\n};`;\n\nexport const update = {\n  code,\n  namespace: Update,\n};\n","import { basic } from './basic';\nimport { different } from './different';\nimport { custom } from './custom';\nimport { close } from './close';\nimport { position } from './position';\nimport { showClose } from './showClose';\nimport { update } from './update';\n\nexport const exampleList = {\n  [basic.namespace]: basic,\n  [different.namespace]: different,\n  [custom.namespace]: custom,\n  [update.namespace]: update,\n  [close.namespace]: close,\n  [position.namespace]: position,\n  [showClose.namespace]: showClose,\n};\n","import React, { useMemo } from 'react';\nimport ComponentInnerLayout from '@/components/Layout/ComponentInnerLayout';\nimport { MESSAGE_KEY } from '@/constants';\nimport { useLocale } from '@/locale/useLocal/useLocal';\nimport { ComponentCodeBlock } from '@/components/DemoBlock';\nimport { exampleList } from './examples';\n\nfunction SpinExample() {\n  const [local] = useLocale<typeof MESSAGE_KEY>({ namespace: MESSAGE_KEY });\n  const dataList = useMemo(\n    () =>\n      Object.keys(local).map((key) => ({\n        ...local[key],\n        ...exampleList[key],\n      })),\n    [local, exampleList]\n  );\n\n  const titleList = useMemo(\n    () =>\n      dataList.map((item) => ({\n        title: item.title,\n        href: `#${item.namespace}`,\n      })),\n    [dataList]\n  );\n\n  return (\n    <ComponentInnerLayout titleList={titleList}>\n      {dataList.map((data) => (\n        <ComponentCodeBlock key={data.namespace} {...data} />\n      ))}\n    </ComponentInnerLayout>\n  );\n}\nexport default SpinExample;\n"],"names":["basic","code","namespace","Basic","different","Different","custom","Custom","close","Close","position","Position","showClose","ShowClose","update","Update","exampleList","_exampleList","_defineProperty","_useLocale","useLocale","MESSAGE_KEY","local","_slicedToArray","dataList","useMemo","Object","keys","map","key","_objectSpread","titleList","item","title","href","concat","React","ComponentInnerLayout","data","ComponentCodeBlock","_extends"],"sourceRoot":""}