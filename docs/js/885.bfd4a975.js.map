{"version":3,"file":"js/885.bfd4a975.js","mappings":"oPAiBaA,EAAQ,CACnBC,KAhBW,2WAiBXC,UAAWC,EAAAA,ICaAC,EAAa,CACxBH,KA/BW,goBAgCXC,UAAWG,EAAAA,ICIAC,EAAQ,CACnBL,KArCW,imBAsCXC,UAAWK,EAAAA,ICUAC,EAAM,CACjBP,KAjDW,suCAkDXC,UAAWO,EAAAA,ICsBAC,EAAgB,CAC3BT,KAzEW,q3DA0EXC,UAAWS,EAAAA,ICtEAC,GAAWC,EAAG,CAAC,GAAJC,EAAAA,EAAAA,GAAAD,EACrBb,EAAME,UAAYF,IAAKc,EAAAA,EAAAA,GAAAD,EACvBT,EAAWF,UAAYE,IAAUU,EAAAA,EAAAA,GAAAD,EACjCP,EAAMJ,UAAYI,IAAKQ,EAAAA,EAAAA,GAAAD,EACvBL,EAAIN,UAAYM,IAAGM,EAAAA,EAAAA,GAAAD,EACnBH,EAAcR,UAAYQ,GAAaG,G,qkBCwB1C,QA5BA,WACE,IAAAE,GAAgBC,EAAAA,EAAAA,GAA+B,CAAEd,UAAWe,EAAAA,KAArDC,GAAoEC,EAAAA,EAAAA,GAAAJ,EAAA,GAA/D,GACNK,GAAWC,EAAAA,EAAAA,UACf,kBACEC,OAAOC,KAAKL,GAAOM,KAAI,SAACC,GAAG,OAAAC,EAAAA,EAAA,GACtBR,EAAMO,IACNb,EAAYa,GAAI,GAClB,GACL,CAACP,EAAON,IAGJe,GAAYN,EAAAA,EAAAA,UAChB,kBACED,EAASI,KAAI,SAACI,GAAI,MAAM,CACtBC,MAAOD,EAAKC,MACZC,KAAM,IAAFC,OAAMH,EAAK1B,WAChB,GAAE,GACL,CAACkB,IAGH,OACEY,EAAAA,cAACC,EAAAA,EAAoB,CAACN,UAAWA,GAC9BP,EAASI,KAAI,SAACU,GAAI,OACjBF,EAAAA,cAACG,EAAAA,IAAkBC,EAAAA,EAAAA,GAAA,CAACX,IAAKS,EAAKhC,WAAegC,GAAQ,IAI7D,C","sources":["webpack://@mx-design/example/./src/pages/checkbox/examples/basic.tsx","webpack://@mx-design/example/./src/pages/checkbox/examples/controlled.tsx","webpack://@mx-design/example/./src/pages/checkbox/examples/group.tsx","webpack://@mx-design/example/./src/pages/checkbox/examples/all.tsx","webpack://@mx-design/example/./src/pages/checkbox/examples/customContent.tsx","webpack://@mx-design/example/./src/pages/checkbox/examples/index.ts","webpack://@mx-design/example/./src/pages/checkbox/index.tsx"],"sourcesContent":["import { Basic } from '../locale';\n\nconst code = `\nimport { Space, Checkbox } from '@mx-design/web';\n\nfunction App() {\n  return (\n    <Space>\n      <Checkbox>Checkbox</Checkbox>\n      <Checkbox indeterminate>半选状态</Checkbox>\n      <Checkbox indeterminate disabled>半选状态</Checkbox>\n      <Checkbox disabled>Checkbox</Checkbox>\n      <Checkbox checked disabled>Checkbox</Checkbox>\n    </Space>\n  );\n};`;\n\nexport const basic = {\n  code,\n  namespace: Basic,\n};\n","import { Controlled } from '../locale';\n\nconst code = `\nimport { Checkbox, Button, Space } from '@mx-design/web';\n\nfunction App() {\n  const [checked, setChecked] = React.useState(false);\n  return (\n    <div>\n      <Space size={40}>\n        <Checkbox\n          checked={checked}\n        >\n          Checkbox\n        </Checkbox>\n        <Checkbox checked={checked} disabled>\n          disabled Checkbox\n        </Checkbox>\n      </Space>\n      <div style={{ marginTop: 30 }}>\n        <Button\n          onClick={() => {\n            setChecked(!checked);\n          }}\n        >\n          {checked ? 'unCheck' : 'Check'}\n        </Button>\n      </div>\n    </div>\n  );\n}`;\n\nexport const controlled = {\n  code,\n  namespace: Controlled,\n};\n","import { Group } from '../locale';\n\nconst code = `\nimport { Checkbox } from '@mx-design/web';\n\nfunction App() {\n  const CheckboxGroup = Checkbox.Group;\n  const options = [\n    {\n      label: 'Option 1',\n      value: '1',\n    },\n    {\n      label: 'Option 2',\n      value: '2',\n      disabled: true,\n    },\n    {\n      label: 'Option 3',\n      value: '3',\n    },\n    {\n      label: 'Option 4',\n      value: '4',\n    },\n  ];\n\n  return (\n    <div>\n      <CheckboxGroup\n        options={options}\n        style={{ display: 'block', marginBottom: 16 }}\n        onChange={(value)=> console.log(value)}\n      />\n    </div>\n  );\n};`;\n\nexport const group = {\n  code,\n  namespace: Group,\n};\n","import { All } from '../locale';\n\nconst code = `\nimport { Checkbox } from '@mx-design/web';\n\nfunction App() {\n  const [indeterminate, setIndeterminate] = React.useState(true);\n  const [checkAll, setCheckAll] = React.useState(false);\n  const [value, setValue] = React.useState([0, 1]);\n\n  const CheckboxGroup = Checkbox.Group;\n  const options = ['Option 1', 'Option 2', 'Option 3'];\n\n  function onChangeAll(checked) {\n    if (checked) {\n      setIndeterminate(false);\n      setCheckAll(true);\n      setValue([0, 1, 2]);\n    } else {\n      setIndeterminate(false);\n      setCheckAll(false);\n      setValue([]);\n    }\n  }\n\n  function onChange(checkList) {\n    setIndeterminate(!!(checkList.length && checkList.length !== options.length));\n    setCheckAll(!!(checkList.length === options.length));\n    setValue(checkList);\n  }\n\n  return (\n    <div>\n      <div style={{ marginBottom: 16 }}>\n        <Checkbox onChange={onChangeAll} checked={checkAll} indeterminate={indeterminate}>\n          {checkAll ? 'unCheck All' : 'Check All'}\n        </Checkbox>\n      </div>\n      <CheckboxGroup\n        value={value}\n        options={options.map((x, i) => ({\n          label: x,\n          value: i,\n        }))}\n        onChange={onChange}\n      />\n    </div>\n  );\n}`;\n\nexport const all = {\n  code,\n  namespace: All,\n};\n","import { CustomContent } from '../locale';\n\nconst code = `\nimport { Checkbox, Space } from '@mx-design/web';\n\nfunction App() {\n  const Card = ({ item, checked }) => {\n    const customCheckboxCard = {\n      padding: '10px 16px',\n      border: '1px solid #ddd',\n      borderRadius: '4px',\n      width: '250px',\n      boxSizing: 'border-box',\n      border: \\`1px solid \\${checked ? '#cc449b' : '#ddd'}\\`,\n      color: checked ? '#cc449b' : ''\n    }\n\n    return (\n      <div style={customCheckboxCard} key={item}>\n        <strong>Checkbox Card {item}</strong>\n        <div>this is a text</div>\n      </div>\n    )\n  }\n\n  const tagStyle = {\n    display: 'inline-flex',\n    alignItems: 'center',\n    boxSizing: 'border-box',\n    height: '24px',\n    padding: '0 8px',\n    border: '1px solid transparent',\n    background: 'var(--bg-color-component)',\n    borderRadius: '4px',\n    fontSize: '12px',\n    fontWeight: 500,\n    lineHeight: '22px'\n  }\n  return (\n    <div>\n      <div\n        style={{ marginBottom: 20 }}\n      >\n        <Checkbox.Group defaultValue={['Beijing']} >\n          {['Beijing', 'Shanghai', 'Guangzhou'].map((item) => {\n            return (\n              <Checkbox key={item} value={item} style={tagStyle}>\n                {({ checked }) => {\n                  return (\n                    <div key={item} style={{ color: checked ? '#cc449b' : '' }}>\n                      {item}\n                    </div>\n                  );\n                }}\n              </Checkbox>\n            );\n          })}\n        </Checkbox.Group>\n      </div>\n      <Checkbox.Group defaultValue={[1]}>\n        {[1, 2].map((item) => {\n          return (\n            <Checkbox key={item} value={item}>\n              {({ checked }) => {\n                return <Card item={item} checked={checked} />;\n              }}\n            </Checkbox>\n          );\n        })}\n      </Checkbox.Group>\n    </div>\n  );\n};`;\n\nexport const customContent = {\n  code,\n  namespace: CustomContent,\n};\n","import { basic } from './basic';\nimport { controlled } from './controlled';\nimport { group } from './group';\nimport { all } from './all';\nimport { customContent } from './customContent';\n\nexport const exampleList = {\n  [basic.namespace]: basic,\n  [controlled.namespace]: controlled,\n  [group.namespace]: group,\n  [all.namespace]: all,\n  [customContent.namespace]: customContent,\n};\n","import React, { useMemo } from 'react';\nimport ComponentInnerLayout from '@/components/Layout/ComponentInnerLayout';\nimport { CHECKBOX_KEY } from '@/constants';\nimport { useLocale } from '@/locale/useLocal/useLocal';\nimport { ComponentCodeBlock } from '@/components/DemoBlock';\nimport { exampleList } from './examples';\n\nfunction CheckboxExample() {\n  const [local] = useLocale<typeof CHECKBOX_KEY>({ namespace: CHECKBOX_KEY });\n  const dataList = useMemo(\n    () =>\n      Object.keys(local).map((key) => ({\n        ...local[key],\n        ...exampleList[key],\n      })),\n    [local, exampleList]\n  );\n\n  const titleList = useMemo(\n    () =>\n      dataList.map((item) => ({\n        title: item.title,\n        href: `#${item.namespace}`,\n      })),\n    [dataList]\n  );\n\n  return (\n    <ComponentInnerLayout titleList={titleList}>\n      {dataList.map((data) => (\n        <ComponentCodeBlock key={data.namespace} {...data} />\n      ))}\n    </ComponentInnerLayout>\n  );\n}\nexport default CheckboxExample;\n"],"names":["basic","code","namespace","Basic","controlled","Controlled","group","Group","all","All","customContent","CustomContent","exampleList","_exampleList","_defineProperty","_useLocale","useLocale","CHECKBOX_KEY","local","_slicedToArray","dataList","useMemo","Object","keys","map","key","_objectSpread","titleList","item","title","href","concat","React","ComponentInnerLayout","data","ComponentCodeBlock","_extends"],"sourceRoot":""}