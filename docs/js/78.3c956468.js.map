{"version":3,"file":"js/78.3c956468.js","mappings":"0OAmBaA,EAAQ,CACnBC,KAlBW,yTAmBXC,UAAWC,EAAAA,GACXC,mBAAoB,CAClBC,OAAQ,ICkCCC,EAAY,CACvBL,KAxDW,w3CAyDXC,UAAWK,EAAAA,ICxDAC,GAAWC,EAAG,CAAC,GAAJC,EAAAA,EAAAA,GAAAD,EACrBT,EAAME,UAAYF,IAAKU,EAAAA,EAAAA,GAAAD,EACvBH,EAAUJ,UAAYI,GAASG,G,qkBC8BlC,QA5BA,WACE,IAAAE,GAAgBC,EAAAA,EAAAA,GAAmC,CAAEV,UAAWW,EAAAA,KAAzDC,GAA4EC,EAAAA,EAAAA,GAAAJ,EAAA,GAAvE,GACNK,GAAWC,EAAAA,EAAAA,UACf,kBACEC,OAAOC,KAAKL,GAAOM,KAAI,SAACC,GAAG,OAAAC,EAAAA,EAAA,GACtBR,EAAMO,IACNb,EAAYa,GAAI,GAClB,GACL,CAACP,EAAON,IAGJe,GAAYN,EAAAA,EAAAA,UAChB,kBACED,EAASI,KAAI,SAACI,GAAI,MAAM,CACtBC,MAAOD,EAAKC,MACZC,KAAM,IAAFC,OAAMH,EAAKtB,WAChB,GAAE,GACL,CAACc,IAGH,OACEY,EAAAA,cAACC,EAAAA,EAAoB,CAACN,UAAWA,GAC9BP,EAASI,KAAI,SAACU,GAAI,OACjBF,EAAAA,cAACG,EAAAA,IAAkBC,EAAAA,EAAAA,GAAA,CAACX,IAAKS,EAAK5B,WAAe4B,GAAQ,IAI7D,C","sources":["webpack://@mx-design/example/./src/pages/affix/examples/basic.tsx","webpack://@mx-design/example/./src/pages/affix/examples/container.tsx","webpack://@mx-design/example/./src/pages/affix/examples/index.ts","webpack://@mx-design/example/./src/pages/affix/index.tsx"],"sourcesContent":["import { Basic } from '../locale';\n\nconst code = `\nimport { Affix, Button } from '@mx-design/web';\n\nfunction App() {\n  const [top, setTop] = React.useState(150);\n\n  const handleClick = () => {\n    setTop(top + 10);\n  };\n\n  return (\n    <Affix offsetTop={top} offsetBottom={10}>\n      <Button onClick={handleClick}>固钉</Button>\n    </Affix>\n  );\n}`;\n\nexport const basic = {\n  code,\n  namespace: Basic,\n  demoContainerStyle: {\n    zIndex: 2,\n  },\n};\n","import { Container } from '../locale';\n\nconst code = `\nimport { Affix } from '@mx-design/web';\n\nfunction App() {\n  const [container, setContainer] = React.useState(null);\n  const [affixed, setAffixed] = React.useState(false);\n  const affixRef = React.useRef(null);\n\n  const handleFixedChange = (affixed, { top }) => {\n    console.log('top', top);\n    setAffixed(affixed);\n  };\n\n  const backgroundStyle = {\n    height: '1500px',\n    paddingTop: '100px',\n    backgroundColor: '#fff',\n    backgroundImage:\n      \\`linear-gradient(45deg,#ddd 25%,transparent 0),\n      linear-gradient(45deg,transparent 75%,#ddd 0),\n      linear-gradient(45deg,#ddd 25%,transparent 0),\n      linear-gradient(45deg,transparent 75%,#ddd 0)\\`,\n    backgroundSize: '30px 30px',\n    backgroundPosition: '0 0,15px 15px,15px 15px,0 0',\n  };\n\n  return (\n    <div\n      style={{\n        borderRadius: '3px',\n        height: '400px',\n        overflowX: 'hidden',\n        overflowY: 'auto',\n        overscrollBehavior: 'none',\n      }}\n      ref={(ref)=>{\n        setContainer(ref)\n      }}\n    >\n      <div style={backgroundStyle}>\n        <Affix\n          offsetTop={50}\n          container={container}\n          zIndex={5}\n          onFixedChange={handleFixedChange}\n          ref={affixRef}\n          isInScrollContainer\n        >\n          <Button>affixed: {\\`\\${affixed}\\`}</Button>\n        </Affix>\n      </div>\n    </div>\n  );\n}`;\n\nexport const container = {\n  code,\n  namespace: Container,\n};\n","import { basic } from './basic';\nimport { container } from './container';\n\nexport const exampleList = {\n  [basic.namespace]: basic,\n  [container.namespace]: container,\n};\n","import React, { useMemo } from 'react';\nimport ComponentInnerLayout from '@/components/Layout/ComponentInnerLayout';\nimport { NAME_SPACE_AFFIX } from './locale';\nimport { useLocale } from '@/locale/useLocal/useLocal';\nimport { ComponentCodeBlock } from '@/components/DemoBlock';\nimport { exampleList } from './examples';\n\nfunction AffixExample() {\n  const [local] = useLocale<typeof NAME_SPACE_AFFIX>({ namespace: NAME_SPACE_AFFIX });\n  const dataList = useMemo(\n    () =>\n      Object.keys(local).map((key) => ({\n        ...local[key],\n        ...exampleList[key],\n      })),\n    [local, exampleList]\n  );\n\n  const titleList = useMemo(\n    () =>\n      dataList.map((item) => ({\n        title: item.title,\n        href: `#${item.namespace}`,\n      })),\n    [dataList]\n  );\n\n  return (\n    <ComponentInnerLayout titleList={titleList}>\n      {dataList.map((data) => (\n        <ComponentCodeBlock key={data.namespace} {...data} />\n      ))}\n    </ComponentInnerLayout>\n  );\n}\nexport default AffixExample;\n"],"names":["basic","code","namespace","Basic","demoContainerStyle","zIndex","container","Container","exampleList","_exampleList","_defineProperty","_useLocale","useLocale","NAME_SPACE_AFFIX","local","_slicedToArray","dataList","useMemo","Object","keys","map","key","_objectSpread","titleList","item","title","href","concat","React","ComponentInnerLayout","data","ComponentCodeBlock","_extends"],"sourceRoot":""}