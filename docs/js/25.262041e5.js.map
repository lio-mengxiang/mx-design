{"version":3,"file":"js/25.262041e5.js","mappings":"mPA4BaA,EAAQ,CACnBC,KA3BW,4lBA4BXC,UAAWC,EAAAA,ICSAC,EAAQ,CACnBH,KAtCW,k6BAuCXC,UAAWG,EAAAA,ICwBAC,EAAS,CACpBL,KAhEW,0mDAiEXC,UAAWK,EAAAA,ICaAC,EAAW,CACtBP,KA/EW,++DAgFXC,UAAWO,EAAAA,ICnCAC,EAAW,CACtBT,KA9CW,4mCA+CXC,UAAWS,EAAAA,ICVAC,EAAS,CACpBX,KAtCW,s4BAuCXC,UAAWW,EAAAA,ICjCAC,GAAWC,EAAG,CAAC,GAAJC,EAAAA,EAAAA,GAAAD,EACrBf,EAAME,UAAYF,IAAKgB,EAAAA,EAAAA,GAAAD,EACvBX,EAAMF,UAAYE,IAAKY,EAAAA,EAAAA,GAAAD,EACvBT,EAAOJ,UAAYI,IAAMU,EAAAA,EAAAA,GAAAD,EACzBP,EAASN,UAAYM,IAAQQ,EAAAA,EAAAA,GAAAD,EAC7BL,EAASR,UAAYQ,IAAQM,EAAAA,EAAAA,GAAAD,EAC7BH,EAAOV,UAAYU,GAAMG,G,qkBCqB5B,QA5BA,WACE,IAAAE,GAAgBC,EAAAA,EAAAA,GAA4B,CAAEhB,UAAWiB,EAAAA,KAAlDC,GAA8DC,EAAAA,EAAAA,GAAAJ,EAAA,GAAzD,GACNK,GAAWC,EAAAA,EAAAA,UACf,kBACEC,OAAOC,KAAKL,GAAOM,KAAI,SAACC,GAAG,OAAAC,EAAAA,EAAA,GACtBR,EAAMO,IACNb,EAAYa,GAAI,GAClB,GACL,CAACP,EAAON,IAGJe,GAAYN,EAAAA,EAAAA,UAChB,kBACED,EAASI,KAAI,SAACI,GAAI,MAAM,CACtBC,MAAOD,EAAKC,MACZC,KAAM,IAAFC,OAAMH,EAAK5B,WAChB,GAAE,GACL,CAACoB,IAGH,OACEY,EAAAA,cAACC,EAAAA,EAAoB,CAACN,UAAWA,GAC9BP,EAASI,KAAI,SAACU,GAAI,OACjBF,EAAAA,cAACG,EAAAA,IAAkBC,EAAAA,EAAAA,GAAA,CAACX,IAAKS,EAAKlC,WAAekC,GAAQ,IAI7D,C","sources":["webpack://@mx-design/example/./src/pages/modal/examples/basic.tsx","webpack://@mx-design/example/./src/pages/modal/examples/async.tsx","webpack://@mx-design/example/./src/pages/modal/examples/footer.tsx","webpack://@mx-design/example/./src/pages/modal/examples/feedback.tsx","webpack://@mx-design/example/./src/pages/modal/examples/position.tsx","webpack://@mx-design/example/./src/pages/modal/examples/update.tsx","webpack://@mx-design/example/./src/pages/modal/examples/index.ts","webpack://@mx-design/example/./src/pages/modal/index.tsx"],"sourcesContent":["import { Basic } from '../locale';\n\nconst code = `\nimport { useModal, Button } from '@mx-design/web';\n\nfunction App() {\n  const Modal = useModal();\n  return (\n    <Button\n      onClick={() => {\n        const modalId = Modal.add({\n          title: 'Modal Title',\n          content: (\n            <div>\n              You can customize modal body text by the current situation. This modal will be closed immediately once you press the OK\n              button.\n            </div>\n          ),\n          visible: true,\n          onCancel: () => Modal.remove(modalId),\n        });\n      }}\n    >\n      Open Modal\n    </Button>\n  );\n}`;\n\nexport const basic = {\n  code,\n  namespace: Basic,\n};\n","import { Async } from '../locale';\n\nconst code = `\nimport { useModal, Button, useMessage } from '@mx-design/web';\n\nfunction App() {\n  const Modal = useModal();\n  const Message = useMessage();\n  return (\n    <Button\n      onClick={() => {\n        const modalId = Modal.add({\n          title: 'Modal Title',\n          content: <div>Form xxx</div>,\n          visible: true,\n          onCancel: () => Modal.remove(modalId),\n          okLoading: false,\n          onOk: () => {\n            Modal.update(modalId, { okLoading: true });\n            new Promise((res) => {\n              setTimeout(() => {\n                res('complete');\n              }, 2000);\n            }).then((data) => {\n              Message.add({\n                type: 'success',\n                content: data,\n              });\n              Modal.remove(modalId);\n            });\n          },\n        });\n      }}\n    >\n      Open Modal with async logic\n    </Button>\n  );\n}`;\n\nexport const async = {\n  code,\n  namespace: Async,\n};\n","import { Footer } from '../locale';\n\nconst code = `\nimport { useModal, Button, Space } from '@mx-design/web';\n\nfunction App() {\n  const Modal = useModal();\n  return (\n    <Space>\n      <Button\n        onClick={() => {\n          const modalId = Modal.add({\n            title: 'Modal Title',\n            content: (\n              <div>\n                You can customize modal footer\n              </div>\n            ),\n            visible: true,\n            onCancel: () => Modal.remove(modalId),\n            footer: <Button onClick={() => Modal.remove(modalId)}>OK</Button>\n          });\n        }}\n      >\n        Open Modal with customized footer\n      </Button>\n      <Button\n        onClick={() => {\n          const modalId = Modal.add({\n            title: 'Modal Title',\n            content: (\n              <div>\n                You can customize modal footer\n              </div>\n            ),\n            visible: true,\n            footerAlign: 'left',\n            onCancel: () => Modal.remove(modalId),\n            footer: <Button onClick={() => Modal.remove(modalId)}>I'm left</Button>\n          });\n        }}\n      >\n         Open Modal with customized footer\n      </Button>\n      <Button\n        onClick={() => {\n          const modalId = Modal.add({\n            title: 'Modal Title',\n            content: (\n              <div>\n                You can customize modal footer\n              </div>\n            ),\n            visible: true,\n            onCancel: () => Modal.remove(modalId),\n            footer: null\n          });\n        }}\n      >\n        Open Modal without footer\n      </Button>\n    </Space>\n  );\n}`;\n\nexport const footer = {\n  code,\n  namespace: Footer,\n};\n","import { Feedback } from '../locale';\n\nconst code = `\nimport { useModal, Button, Space } from '@mx-design/web';\n\nfunction App() {\n  const Modal = useModal();\n  return (\n    <Space>\n      <Button\n        onClick={() => {\n          const modalId = Modal.add({\n            title: 'Info Modal Title',\n            type: 'info',\n            content: <div>Info Modal</div>,\n            visible: true,\n            hideCancelBtn: true,\n            onCancel: () => Modal.remove(modalId),\n            onOk: () => Modal.remove(modalId),\n          });\n        }}\n      >\n        Info Modal\n      </Button>\n      <Button\n        type=\"brand\"\n        status=\"warning\"\n        onClick={() => {\n          const modalId = Modal.add({\n            title: 'Warning Modal Title',\n            type: 'warning',\n            content: <div>Warning Modal</div>,\n            visible: true,\n            hideCancelBtn: true,\n            onCancel: () => Modal.remove(modalId),\n            onOk: () => Modal.remove(modalId),\n          });\n        }}\n      >\n        Warning\n      </Button>\n      <Button\n        type=\"brand\"\n        status=\"error\"\n        onClick={() => {\n          const modalId = Modal.add({\n            title: 'Error Modal Title',\n            type: 'error',\n            content: <div>Error Modal</div>,\n            visible: true,\n            hideCancelBtn: true,\n            onCancel: () => Modal.remove(modalId),\n            onOk: () => Modal.remove(modalId),\n          });\n        }}\n      >\n        Error\n      </Button>\n\n      <Button\n        type=\"brand\"\n        status=\"success\"\n        onClick={() => {\n          const modalId = Modal.add({\n            title: 'Error Modal Title',\n            type: 'success',\n            content: <div>Success Modal</div>,\n            visible: true,\n            hideCancelBtn: true,\n            onCancel: () => Modal.remove(modalId),\n            onOk: () => Modal.remove(modalId),\n          });\n        }}\n      >\n        Success\n      </Button>\n    </Space>\n  );\n}`;\n\nexport const feedback = {\n  code,\n  namespace: Feedback,\n};\n","import { Position } from '../locale';\n\nconst code = `\nimport { useModal, Space, Button } from '@mx-design/web';\n\nfunction App() {\n  const Modal = useModal();\n  return (\n    <Space>\n      <Button\n        onClick={() => {\n          const modalId = Modal.add({\n            title: 'Modal Title',\n            content: (\n              <div>\n                Display a modal dialog at 50px to top\n              </div>\n            ),\n            visible: true,\n            themeStyle: { '--modal-top': '50px' },\n            onCancel: () => Modal.remove(modalId),\n          });\n        }}\n      >\n        Display a modal dialog at 50px to top\n      </Button>\n      <Button\n        onClick={() => {\n          const modalId = Modal.add({\n            title: 'Modal Title',\n            content: (\n              <div>\n                Vertically centered modal dialog\n              </div>\n            ),\n            visible: true,\n            themeStyle: { '--modal-top': 'calc(50% - 104px)' },\n            onCancel: () => Modal.remove(modalId),\n          });\n        }}\n      >\n        Vertically centered modal dialog\n      </Button>\n    </Space>\n  );\n}`;\n\nexport const position = {\n  code,\n  namespace: Position,\n};\n","import { Update } from '../locale';\n\nconst code = `\nimport { Modal, Button, IconLoading } from '@mx-design/web';\n\nfunction App() {\n  const Modal = useModal();\n  const sleep = async (time) => {\n    return new Promise((resolve) => {\n      setTimeout(() => {\n        resolve();\n      }, time);\n    });\n  };\n\n  async function updateModal() {\n    const modalId = Modal.add({\n      title: 'Modal Title',\n      content: (\n        <div style={{ display: 'flex', alignItems: 'center' }}>\n          This modal will close after 1.5s. <IconLoading spin style={{ color: 'var(--brand-color)' }} />\n        </div>\n      ),\n      visible: true,\n      closable: false,\n      footer: null,\n    });\n    await sleep(1500);\n    Modal.update(modalId, {\n      type: 'success',\n      content: 'Update success!',\n    });\n    await sleep(500);\n    Modal.remove(modalId);\n  }\n\n  return <Button onClick={updateModal}>Update message</Button>;\n}`;\n\nexport const update = {\n  code,\n  namespace: Update,\n};\n","import { basic } from './basic';\nimport { async } from './async';\nimport { footer } from './footer';\nimport { feedback } from './feedback';\nimport { position } from './position';\n\nimport { update } from './update';\n\nexport const exampleList = {\n  [basic.namespace]: basic,\n  [async.namespace]: async,\n  [footer.namespace]: footer,\n  [feedback.namespace]: feedback,\n  [position.namespace]: position,\n  [update.namespace]: update,\n};\n","import React, { useMemo } from 'react';\nimport ComponentInnerLayout from '@/components/Layout/ComponentInnerLayout';\nimport { MODAL_KEY } from '@/constants';\nimport { useLocale } from '@/locale/useLocal/useLocal';\nimport { ComponentCodeBlock } from '@/components/DemoBlock';\nimport { exampleList } from './examples';\n\nfunction ModalExample() {\n  const [local] = useLocale<typeof MODAL_KEY>({ namespace: MODAL_KEY });\n  const dataList = useMemo(\n    () =>\n      Object.keys(local).map((key) => ({\n        ...local[key],\n        ...exampleList[key],\n      })),\n    [local, exampleList]\n  );\n\n  const titleList = useMemo(\n    () =>\n      dataList.map((item) => ({\n        title: item.title,\n        href: `#${item.namespace}`,\n      })),\n    [dataList]\n  );\n\n  return (\n    <ComponentInnerLayout titleList={titleList}>\n      {dataList.map((data) => (\n        <ComponentCodeBlock key={data.namespace} {...data} />\n      ))}\n    </ComponentInnerLayout>\n  );\n}\nexport default ModalExample;\n"],"names":["basic","code","namespace","Basic","async","Async","footer","Footer","feedback","Feedback","position","Position","update","Update","exampleList","_exampleList","_defineProperty","_useLocale","useLocale","MODAL_KEY","local","_slicedToArray","dataList","useMemo","Object","keys","map","key","_objectSpread","titleList","item","title","href","concat","React","ComponentInnerLayout","data","ComponentCodeBlock","_extends"],"sourceRoot":""}