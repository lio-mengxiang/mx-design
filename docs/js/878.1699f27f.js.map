{"version":3,"file":"js/878.1699f27f.js","mappings":"sNAaaA,EAAQ,CACnBC,KAZW,gMAaXC,UAAWC,EAAAA,ICMAC,EAAmB,CAC9BH,KApBW,qkBAqBXC,UAAWG,EAAAA,ICkHAC,EAAW,CACtBL,KAxIW,ywHAyIXC,UAAWK,EAAAA,ICjHAC,EAAgB,CAC3BP,KAzBW,8iBA0BXC,UAAWO,EAAAA,ICvBAC,GAAWC,EAAG,CAAC,GAAJC,EAAAA,EAAAA,GAAAD,EACrBX,EAAME,UAAYF,IAAKY,EAAAA,EAAAA,GAAAD,EACvBP,EAAiBF,UAAYE,IAAgBQ,EAAAA,EAAAA,GAAAD,EAC7CL,EAASJ,UAAYI,IAAQM,EAAAA,EAAAA,GAAAD,EAC7BH,EAAcN,UAAYM,GAAaG,G,ylBC2B1C,QA7BA,WACE,IAAAE,GAAgBC,EAAAA,EAAAA,GAA8B,CAAEZ,UAAWa,EAAAA,KAApDC,GAAkEC,EAAAA,EAAAA,GAAAJ,EAAA,GAA7D,GACNK,GAAWC,EAAAA,EAAAA,UACf,kBACEC,OAAOC,KAAKL,GAAOM,KAAI,SAACC,GAAG,OAAAC,EAAAA,EAAA,CACzBD,IAAAA,GACGP,EAAMO,IACNb,EAAYa,GAAI,GAClB,GACL,CAACP,EAAON,IAGJe,GAAYN,EAAAA,EAAAA,UAChB,kBACED,EAASI,KAAI,SAACI,GAAI,MAAM,CACtBC,MAAOD,EAAKC,MACZC,KAAM,IAAFC,OAAMH,EAAKH,KAChB,GAAE,GACL,CAACL,IAEH,OACEY,EAAAA,cAACC,EAAAA,EAAoB,CAACN,UAAWA,GAC9BP,EAASI,KAAI,SAACU,GAAI,OACjBF,EAAAA,cAACG,EAAAA,GAAuBD,EAAQ,IAIxC,C","sources":["webpack://@mx-design/example/./src/pages/tooltip/examples/basic.tsx","webpack://@mx-design/example/./src/pages/tooltip/examples/differentTrigger.tsx","webpack://@mx-design/example/./src/pages/tooltip/examples/position.tsx","webpack://@mx-design/example/./src/pages/tooltip/examples/floatingLayer.tsx","webpack://@mx-design/example/./src/pages/tooltip/examples/index.ts","webpack://@mx-design/example/./src/pages/tooltip/index.tsx"],"sourcesContent":["import { Basic } from '../locale';\n\nconst code = `\nimport { Tooltip, Button } from '@mx-design/web';\n\nfunction App() {\n  return (\n    <Tooltip content=\"This is a tooltip box\">\n      <Button>Hover me</Button>\n    </Tooltip>\n  )\n}`;\n\nexport const basic = {\n  code,\n  namespace: Basic,\n};\n","import { DifferentTrigger } from '../locale';\n\nconst code = `\nimport { Tooltip, Button } from '@mx-design/web';\n\nfunction App() {\n  return (\n    <Space>\n      <Tooltip trigger=\"hover\" showArrow content=\"Hover me\">\n        <Button>Hover me</Button>\n      </Tooltip>\n      <Tooltip themeStyle={{ '--popup-wrapper-color': 'red' }} trigger=\"click\" showArrow content=\"Click me\">\n        <Button onClick={() => console.log('Custom events')}>Click me</Button>\n      </Tooltip>\n      <Tooltip trigger=\"context-menu\" showArrow content=\"Right click\">\n        <Button>Right click</Button>\n      </Tooltip>\n    </Space>\n  );\n}`;\n\nexport const differentTrigger = {\n  code,\n  namespace: DifferentTrigger,\n};\n","import { Position } from '../locale';\n\nconst code = `\nimport { Tooltip, Button } from '@mx-design/web';\n\nfunction App() {\n  const styles = {\n    container: {\n      margin: '0 auto',\n      width: '500px',\n      height: '260px',\n      position: 'relative',\n    },\n    placementTop: {\n      position: 'absolute',\n      top: '0',\n      left: '42%',\n    },\n    placementTopLeft: {\n      position: 'absolute',\n      top: '0',\n      left: '70px',\n    },\n    placementTopRight: {\n      position: 'absolute',\n      top: '0',\n      right: '70px',\n    },\n    placementBottom: {\n      position: 'absolute',\n      bottom: '0',\n      left: '42%',\n    },\n    placementBottomLeft: {\n      position: 'absolute',\n      bottom: '0',\n      left: '70px',\n      width: '120px',\n    },\n    placementBottomRight: {\n      position: 'absolute',\n      bottom: '0',\n      right: '70px',\n    },\n    placementLeft: {\n      position: 'absolute',\n      left: '0',\n      top: '42%',\n    },\n    placementLeftTop: {\n      position: 'absolute',\n      left: '0',\n      top: '50px',\n    },\n    placementLeftBottom: {\n      position: 'absolute',\n      left: '0',\n      bottom: '50px',\n    },\n    placementRight: {\n      position: 'absolute',\n      right: '0',\n      top: '42%',\n    },\n    placementRightTop: {\n      position: 'absolute',\n      right: '0',\n      top: '50px',\n    },\n    placementRightBottom: {\n      position: 'absolute',\n      right: '0',\n      bottom: '50px',\n    },\n  };\n  return (\n    <div style={styles.container}>\n      <Tooltip content=\"这是Tooltip内容\" placement=\"top\" showArrow>\n        <Button style={styles.placementTop}>top</Button>\n      </Tooltip>\n      <Tooltip content=\"这是Tooltip内容 top-start\" placement=\"top-start\" showArrow>\n        <Button style={styles.placementTopLeft}>top-start</Button>\n      </Tooltip>\n      <Tooltip content=\"这是Tooltip内容 top-end\" placement=\"top-end\" showArrow>\n        <Button style={styles.placementTopRight}>top-end</Button>\n      </Tooltip>\n      <Tooltip content=\"这是Tooltip内容\" placement=\"bottom\" showArrow>\n        <Button style={styles.placementBottom}>bottom</Button>\n      </Tooltip>\n      <Tooltip content=\"这是Tooltip内容 bottom-start\" placement=\"bottom-start\" showArrow>\n        <Button style={styles.placementBottomLeft}>bottom-start</Button>\n      </Tooltip>\n      <Tooltip content=\"这是Tooltip内容 bottom-end\" placement=\"bottom-end\" showArrow>\n        <Button style={styles.placementBottomRight}>bottom-end</Button>\n      </Tooltip>\n      <Tooltip content=\"这是Tooltip内容\" placement=\"left\" showArrow>\n        <Button style={styles.placementLeft}>left</Button>\n      </Tooltip>\n      <Tooltip\n        content=\"这是Tooltip内容   left-start\"\n        placement=\"left-start\"\n        overlayStyle={{ width: '140px' }}\n        showArrow\n      >\n        <Button style={styles.placementLeftTop}>left-start</Button>\n      </Tooltip>\n      <Tooltip\n        content=\"这是Tooltip内容 left-end\"\n        placement=\"left-end\"\n        overlayStyle={{ width: '140px' }}\n        showArrow\n      >\n        <Button style={styles.placementLeftBottom}>left-end</Button>\n      </Tooltip>\n      <Tooltip content=\"这是Tooltip内容\" placement=\"right\" showArrow>\n        <Button style={styles.placementRight}>right</Button>\n      </Tooltip>\n      <Tooltip\n        content=\"这是Tooltip内容 right-start\"\n        placement=\"right-start\"\n        overlayStyle={{ width: '140px' }}\n        showArrow\n      >\n        <Button style={styles.placementRightTop}>right-start</Button>\n      </Tooltip>\n      <Tooltip\n        content=\"这是Tooltip内容 right-end\"\n        placement=\"right-end\"\n        overlayStyle={{ width: '140px' }}\n        showArrow\n      >\n        <Button style={styles.placementRightBottom}>right-end</Button>\n      </Tooltip>\n    </div>\n  );\n}`;\n\nexport const position = {\n  code,\n  namespace: Position,\n};\n","import { FloatingLayer } from '../locale';\n\nconst code = `\nimport { Tooltip, Button } from '@mx-design/web';\n\nfunction App() {\n  const colors = [{\n    background: '#165DFF',\n    color: '#fff'\n  },\n  {\n    background: '#722ED1',\n    color: '#fff'\n  }];\n  return (\n    <Space>\n      <Tooltip overlayInnerStyle={colors[0]} content=\"This is a tooltip box\">\n        <Button style={colors[0]}>#165DFF</Button>\n      </Tooltip>\n      <Tooltip  overlayInnerStyle={colors[1]} content=\"This is a tooltip box\">\n        <Button style={colors[1]}>#722ED1</Button>\n      </Tooltip>\n    </Space>\n  );\n}`;\n\nexport const floatingLayer = {\n  code,\n  namespace: FloatingLayer,\n};\n","import { basic } from './basic';\nimport { differentTrigger } from './differentTrigger';\nimport { position } from './position';\nimport { floatingLayer } from './floatingLayer';\n\nexport const exampleList = {\n  [basic.namespace]: basic,\n  [differentTrigger.namespace]: differentTrigger,\n  [position.namespace]: position,\n  [floatingLayer.namespace]: floatingLayer,\n};\n","import React, { useMemo } from 'react';\nimport ComponentInnerLayout from '@/components/Layout/ComponentInnerLayout';\nimport { useLocale } from '@/locale/useLocal/useLocal';\nimport { exampleList } from './examples';\nimport { TOOLTIP_KEY } from '@/constants';\nimport { ComponentCodeBlock } from '@/components/DemoBlock';\n\nfunction TooltipExample() {\n  const [local] = useLocale<typeof TOOLTIP_KEY>({ namespace: TOOLTIP_KEY });\n  const dataList = useMemo(\n    () =>\n      Object.keys(local).map((key) => ({\n        key,\n        ...local[key],\n        ...exampleList[key],\n      })),\n    [local, exampleList]\n  );\n\n  const titleList = useMemo(\n    () =>\n      dataList.map((item) => ({\n        title: item.title,\n        href: `#${item.key}`,\n      })),\n    [dataList]\n  );\n  return (\n    <ComponentInnerLayout titleList={titleList}>\n      {dataList.map((data) => (\n        <ComponentCodeBlock {...data} />\n      ))}\n    </ComponentInnerLayout>\n  );\n}\n\nexport default TooltipExample;\n"],"names":["basic","code","namespace","Basic","differentTrigger","DifferentTrigger","position","Position","floatingLayer","FloatingLayer","exampleList","_exampleList","_defineProperty","_useLocale","useLocale","TOOLTIP_KEY","local","_slicedToArray","dataList","useMemo","Object","keys","map","key","_objectSpread","titleList","item","title","href","concat","React","ComponentInnerLayout","data","ComponentCodeBlock"],"sourceRoot":""}