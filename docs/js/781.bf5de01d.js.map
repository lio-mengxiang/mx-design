{"version":3,"file":"js/781.bf5de01d.js","mappings":"sNAaaA,EAAQ,CACnBC,KAZW,wMAaXC,UAAWC,EAAAA,ICCAC,EAAc,CACzBH,KAfW,6ZAgBXC,UAAWG,EAAAA,ICGAC,EAAmB,CAC9BL,KApBW,mgBAqBXC,UAAWK,EAAAA,ICkHAC,EAAW,CACtBP,KAxIW,+rHAyIXC,UAAWO,EAAAA,IC/FAC,EAAgB,CAC3BT,KA3CW,gyCA4CXC,UAAWS,EAAAA,IC/BAC,EAAa,CACxBX,KAdW,gWAeXC,UAAWW,EAAAA,ICEAC,EAAQ,CACnBb,KAlBW,yWAmBXC,UAAWa,EAAAA,ICRAC,EAAW,CACtBf,KAZW,kOAaXC,UAAWe,EAAAA,ICUAC,EAAU,CACrBjB,KAxBW,6xBAyBXC,UAAWiB,EAAAA,ICjBAC,GAAWC,EAAG,CAAC,GAAJC,EAAAA,EAAAA,GAAAD,EACrBrB,EAAME,UAAYF,IAAKsB,EAAAA,EAAAA,GAAAD,EACvBjB,EAAYF,UAAYE,IAAWkB,EAAAA,EAAAA,GAAAD,EACnCf,EAAiBJ,UAAYI,IAAgBgB,EAAAA,EAAAA,GAAAD,EAC7CL,EAASd,UAAYc,IAAQM,EAAAA,EAAAA,GAAAD,EAC7Bb,EAASN,UAAYM,IAAQc,EAAAA,EAAAA,GAAAD,EAC7BX,EAAcR,UAAYQ,IAAaY,EAAAA,EAAAA,GAAAD,EACvCT,EAAWV,UAAYU,IAAUU,EAAAA,EAAAA,GAAAD,EACjCP,EAAMZ,UAAYY,IAAKQ,EAAAA,EAAAA,GAAAD,EACvBH,EAAQhB,UAAYgB,GAAOG,G,+kBCiB9B,QA7BA,WACE,IAAAE,GAAgBC,EAAAA,EAAAA,GAAmC,CAAEtB,UAAWuB,EAAAA,KAAzDC,GAA4EC,EAAAA,EAAAA,GAAAJ,EAAA,GAAvE,GACNK,GAAWC,EAAAA,EAAAA,UACf,kBACEC,OAAOC,KAAKL,GAAOM,KAAI,SAACC,GAAG,OAAAC,EAAAA,EAAA,CACzBD,IAAAA,GACGP,EAAMO,IACNb,EAAYa,GAAI,GAClB,GACL,CAACP,EAAON,IAGJe,GAAYN,EAAAA,EAAAA,UAChB,kBACED,EAASI,KAAI,SAACI,GAAI,MAAM,CACtBC,MAAOD,EAAKC,MACZC,KAAM,IAAFC,OAAMH,EAAKH,KAChB,GAAE,GACL,CAACL,IAEH,OACEY,EAAAA,cAACC,EAAAA,EAAoB,CAACN,UAAWA,GAC9BP,EAASI,KAAI,SAACU,GAAI,OACjBF,EAAAA,cAACG,EAAAA,GAAuBD,EAAQ,IAIxC,C","sources":["webpack://@mx-design/example/./src/pages/popup/examples/basic.tsx","webpack://@mx-design/example/./src/pages/popup/examples/triggerMode.tsx","webpack://@mx-design/example/./src/pages/popup/examples/differentTrigger.tsx","webpack://@mx-design/example/./src/pages/popup/examples/position.tsx","webpack://@mx-design/example/./src/pages/popup/examples/floatingLayer.tsx","webpack://@mx-design/example/./src/pages/popup/examples/controlled.tsx","webpack://@mx-design/example/./src/pages/popup/examples/mount.tsx","webpack://@mx-design/example/./src/pages/popup/examples/disabled.tsx","webpack://@mx-design/example/./src/pages/popup/examples/dynamic.tsx","webpack://@mx-design/example/./src/pages/popup/examples/index.ts","webpack://@mx-design/example/./src/pages/popup/index.tsx"],"sourcesContent":["import { Basic } from '../locale';\r\n\r\nconst code = `\r\nimport { Popup, Button } from '@mx-design/web';\r\n\r\nfunction App() {\r\n  return (\r\n    <Popup trigger=\"hover\" content=\"This is a popup box\">\r\n      <Button>Hover me</Button>\r\n    </Popup>\r\n  )\r\n}`;\r\n\r\nexport const basic = {\r\n  code,\r\n  namespace: Basic,\r\n};\r\n","import { TriggerMode } from '../locale';\r\n\r\nconst code = `\r\nimport { Popup, Button } from '@mx-design/web';\r\n\r\nfunction App() {\r\n  return (\r\n    <Space>\r\n      <Popup trigger=\"hover\" showArrow content=\"This is a popup box\">\r\n        <Button variant=\"outline\">Default child element to trigger</Button>\r\n      </Popup>\r\n      <Popup triggerElement={<Button>use triggerElement to trigger</Button>} showArrow content=\"This is a popup box\"></Popup>\r\n    </Space>\r\n  );\r\n}`;\r\n\r\nexport const triggerMode = {\r\n  code,\r\n  namespace: TriggerMode,\r\n};\r\n","import { DifferentTrigger } from '../locale';\r\n\r\nconst code = `\r\nimport { Popup, Button } from '@mx-design/web';\r\n\r\nfunction App() {\r\n  return (\r\n    <Space>\r\n      <Popup trigger=\"hover\" showArrow content=\"Hover me\">\r\n        <Button>Hover me</Button>\r\n      </Popup>\r\n      <Popup trigger=\"click\" showArrow content=\"Click me\">\r\n        <Button onClick={() => console.log('Custom events')}>Click me</Button>\r\n      </Popup>\r\n      <Popup trigger=\"context-menu\" showArrow content=\"Right click\">\r\n        <Button>Right click</Button>\r\n      </Popup>\r\n    </Space>\r\n  );\r\n}`;\r\n\r\nexport const differentTrigger = {\r\n  code,\r\n  namespace: DifferentTrigger,\r\n};\r\n","import { Position } from '../locale';\r\n\r\nconst code = `\r\nimport { Popup, Button } from '@mx-design/web';\r\n\r\nfunction App() {\r\n  const styles = {\r\n    container: {\r\n      margin: '0 auto',\r\n      width: '500px',\r\n      height: '260px',\r\n      position: 'relative',\r\n    },\r\n    placementTop: {\r\n      position: 'absolute',\r\n      top: '0',\r\n      left: '42%',\r\n    },\r\n    placementTopLeft: {\r\n      position: 'absolute',\r\n      top: '0',\r\n      left: '70px',\r\n    },\r\n    placementTopRight: {\r\n      position: 'absolute',\r\n      top: '0',\r\n      right: '70px',\r\n    },\r\n    placementBottom: {\r\n      position: 'absolute',\r\n      bottom: '0',\r\n      left: '42%',\r\n    },\r\n    placementBottomLeft: {\r\n      position: 'absolute',\r\n      bottom: '0',\r\n      left: '70px',\r\n      width: '120px',\r\n    },\r\n    placementBottomRight: {\r\n      position: 'absolute',\r\n      bottom: '0',\r\n      right: '70px',\r\n    },\r\n    placementLeft: {\r\n      position: 'absolute',\r\n      left: '0',\r\n      top: '42%',\r\n    },\r\n    placementLeftTop: {\r\n      position: 'absolute',\r\n      left: '0',\r\n      top: '50px',\r\n    },\r\n    placementLeftBottom: {\r\n      position: 'absolute',\r\n      left: '0',\r\n      bottom: '50px',\r\n    },\r\n    placementRight: {\r\n      position: 'absolute',\r\n      right: '0',\r\n      top: '42%',\r\n    },\r\n    placementRightTop: {\r\n      position: 'absolute',\r\n      right: '0',\r\n      top: '50px',\r\n    },\r\n    placementRightBottom: {\r\n      position: 'absolute',\r\n      right: '0',\r\n      bottom: '50px',\r\n    },\r\n  };\r\n  return (\r\n    <div style={styles.container}>\r\n      <Popup content=\"这是Popup内容\" placement=\"top\" showArrow>\r\n        <Button style={styles.placementTop}>top</Button>\r\n      </Popup>\r\n      <Popup content=\"这是Popup内容 top-start\" placement=\"top-start\" showArrow>\r\n        <Button style={styles.placementTopLeft}>top-start</Button>\r\n      </Popup>\r\n      <Popup content=\"这是Popup内容 top-end\" placement=\"top-end\" showArrow>\r\n        <Button style={styles.placementTopRight}>top-end</Button>\r\n      </Popup>\r\n      <Popup content=\"这是Popup内容\" placement=\"bottom\" showArrow>\r\n        <Button style={styles.placementBottom}>bottom</Button>\r\n      </Popup>\r\n      <Popup content=\"这是Popup内容 bottom-start\" placement=\"bottom-start\" showArrow>\r\n        <Button style={styles.placementBottomLeft}>bottom-start</Button>\r\n      </Popup>\r\n      <Popup content=\"这是Popup内容 bottom-end\" placement=\"bottom-end\" showArrow>\r\n        <Button style={styles.placementBottomRight}>bottom-end</Button>\r\n      </Popup>\r\n      <Popup content=\"这是Popup内容\" placement=\"left\" showArrow>\r\n        <Button style={styles.placementLeft}>left</Button>\r\n      </Popup>\r\n      <Popup\r\n        content=\"这是Popup内容   left-start\"\r\n        placement=\"left-start\"\r\n        overlayStyle={{ width: '140px' }}\r\n        showArrow\r\n      >\r\n        <Button style={styles.placementLeftTop}>left-start</Button>\r\n      </Popup>\r\n      <Popup\r\n        content=\"这是Popup内容 left-end\"\r\n        placement=\"left-end\"\r\n        overlayStyle={{ width: '140px' }}\r\n        showArrow\r\n      >\r\n        <Button style={styles.placementLeftBottom}>left-end</Button>\r\n      </Popup>\r\n      <Popup content=\"这是Popup内容\" placement=\"right\" showArrow>\r\n        <Button style={styles.placementRight}>right</Button>\r\n      </Popup>\r\n      <Popup\r\n        content=\"这是Popup内容 right-start\"\r\n        placement=\"right-start\"\r\n        overlayStyle={{ width: '140px' }}\r\n        showArrow\r\n      >\r\n        <Button style={styles.placementRightTop}>right-start</Button>\r\n      </Popup>\r\n      <Popup\r\n        content=\"这是Popup内容 right-end\"\r\n        placement=\"right-end\"\r\n        overlayStyle={{ width: '140px' }}\r\n        showArrow\r\n      >\r\n        <Button style={styles.placementRightBottom}>right-end</Button>\r\n      </Popup>\r\n    </div>\r\n  );\r\n}`;\r\n\r\nexport const position = {\r\n  code,\r\n  namespace: Position,\r\n};\r\n","import { FloatingLayer } from '../locale';\r\n\r\nconst code = `\r\nimport { Popup, Button } from '@mx-design/web';\r\n\r\nfunction App() {\r\n  return (\r\n    <Space direction='vertical'>\r\n      <Space>\r\n        <Popup\r\n          content=\"浮层拥有自定义类名，可以自定义浮层样式\"\r\n          overlayClassName=\"custom-popup\"\r\n          placement=\"bottom\"\r\n        >\r\n          <Button variant=\"outline\">自定义浮层类名（Custom overlay class name）</Button>\r\n        </Popup>\r\n        <Popup\r\n          content=\"浮层宽度是固定的，不会随内容变化而变化（Popup width is fixed）\"\r\n          overlayInnerStyle={{ width: '350px', textAlign: 'center' }}\r\n          placement=\"bottom\"\r\n        >\r\n          <Button variant=\"outline\">固定浮层宽度（Popup width is fixed）</Button>\r\n        </Popup>\r\n      </Space>\r\n      <Space>\r\n        <Popup\r\n          content=\"可以设置浮层最大宽度，当内容超出最大宽度时，文本内容才会换行\"\r\n          overlayStyle={{ maxWidth: '250px' }}\r\n          placement=\"bottom\"\r\n        >\r\n          <Button variant=\"outline\">浮层最大宽度（Maximum width of popup）</Button>\r\n        </Popup>\r\n        <Popup\r\n          content=\"overlayInnerStyle 作为函数使用，可以让浮层内容和触发元素同宽\"\r\n          overlayInnerStyle={(triggerElem) => ({ width: + triggerElem.offsetWidth + 'px' })}\r\n          placement=\"bottom\"\r\n        >\r\n          <Button variant=\"outline\">浮层和触发元素同宽（Same width as the trigger element）</Button>\r\n        </Popup>\r\n      </Space>\r\n    </Space>\r\n  );\r\n}`;\r\n\r\nexport const floatingLayer = {\r\n  code,\r\n  namespace: FloatingLayer,\r\n};\r\n","import { Controlled } from '../locale';\r\n\r\nconst code = `\r\nimport { Popup, Button } from '@mx-design/web';\r\n\r\nfunction App() {\r\n  const [visible, setVisible] = React.useState(true);\r\n\r\n  return (\r\n    <Popup content=\"This is the popup content\" trigger=\"context-menu\" placement=\"right\" visible={visible}>\r\n      <Button onClick={()=> setVisible(!visible)}>一直显示(Always show)</Button>\r\n    </Popup>\r\n  );\r\n}`;\r\n\r\nexport const controlled = {\r\n  code,\r\n  namespace: Controlled,\r\n};\r\n","import { Mount } from '../locale';\r\n\r\nconst code = `\r\nimport { Popup, Button } from '@mx-design/web';\r\n\r\nfunction App() {\r\n  return (\r\n    <Space>\r\n      <Popup\r\n        trigger=\"click\"\r\n        content=\"通过id选择器选择父节点(Select parent node by id selector)\"\r\n        attach='#app'\r\n      >\r\n        <Button>点击查看id为app的元素(Click to view the element whose id is app)</Button>\r\n      </Popup>\r\n    </Space>\r\n  );\r\n}`;\r\n\r\nexport const mount = {\r\n  code,\r\n  namespace: Mount,\r\n};\r\n","import { Disabled } from '../locale';\r\n\r\nconst code = `\r\nimport { Popup, Button } from '@mx-design/web';\r\n\r\nfunction App() {\r\n  return (\r\n    <Popup trigger=\"hover\" disabled showArrow content=\"This is the popup content\">\r\n      <Button>Hover me</Button>\r\n    </Popup>\r\n  );\r\n}`;\r\n\r\nexport const disabled = {\r\n  code,\r\n  namespace: Disabled,\r\n};\r\n","import { Dynamic } from '../locale';\r\n\r\nconst code = `\r\nimport { Popup, Button } from '@mx-design/web';\r\n\r\nfunction App() {\r\n  const [visible] = React.useState(true);\r\n  const [spanVisible, setVisible] = React.useState(false);\r\n  const [content, setContent] = React.useState('This is the popup content');\r\n  const btnClicksRef = React.useRef(0);\r\n\r\n  const toggleContent = () => {\r\n    btnClicksRef.current += 1;\r\n    const showMore = btnClicksRef.current % 2 !== 0;\r\n    setVisible(showMore);\r\n    setContent(\\`This is the popup content\\${showMore ? '，There are many, many, many, many....' : ''}\\`);\r\n  };\r\n\r\n  return (\r\n    <Popup content={content} trigger=\"context-menu\" placement=\"right\" visible={visible}>\r\n      <Button onClick={toggleContent}>Click to change content{spanVisible && <span>，click again</span>}</Button>\r\n    </Popup>\r\n  );\r\n}`;\r\n\r\nexport const dynamic = {\r\n  code,\r\n  namespace: Dynamic,\r\n};\r\n","import { basic } from './basic';\r\nimport { triggerMode } from './triggerMode';\r\nimport { differentTrigger } from './differentTrigger';\r\nimport { position } from './position';\r\nimport { floatingLayer } from './floatingLayer';\r\nimport { controlled } from './controlled';\r\nimport { mount } from './mount';\r\nimport { disabled } from './disabled';\r\nimport { dynamic } from './dynamic';\r\n\r\nexport const exampleList = {\r\n  [basic.namespace]: basic,\r\n  [triggerMode.namespace]: triggerMode,\r\n  [differentTrigger.namespace]: differentTrigger,\r\n  [disabled.namespace]: disabled,\r\n  [position.namespace]: position,\r\n  [floatingLayer.namespace]: floatingLayer,\r\n  [controlled.namespace]: controlled,\r\n  [mount.namespace]: mount,\r\n  [dynamic.namespace]: dynamic,\r\n};\r\n","import React, { useMemo } from 'react';\r\nimport ComponentInnerLayout from '@/components/Layout/ComponentInnerLayout';\r\nimport { useLocale } from '@/locale/useLocal/useLocal';\r\nimport { exampleList } from './examples';\r\nimport { NAME_SPACE_POPUP } from './locale';\r\nimport { ComponentCodeBlock } from '@/components/DemoBlock';\r\n\r\nfunction PopupExample() {\r\n  const [local] = useLocale<typeof NAME_SPACE_POPUP>({ namespace: NAME_SPACE_POPUP });\r\n  const dataList = useMemo(\r\n    () =>\r\n      Object.keys(local).map((key) => ({\r\n        key,\r\n        ...local[key],\r\n        ...exampleList[key],\r\n      })),\r\n    [local, exampleList]\r\n  );\r\n\r\n  const titleList = useMemo(\r\n    () =>\r\n      dataList.map((item) => ({\r\n        title: item.title,\r\n        href: `#${item.key}`,\r\n      })),\r\n    [dataList]\r\n  );\r\n  return (\r\n    <ComponentInnerLayout titleList={titleList}>\r\n      {dataList.map((data) => (\r\n        <ComponentCodeBlock {...data} />\r\n      ))}\r\n    </ComponentInnerLayout>\r\n  );\r\n}\r\n\r\nexport default PopupExample;\r\n"],"names":["basic","code","namespace","Basic","triggerMode","TriggerMode","differentTrigger","DifferentTrigger","position","Position","floatingLayer","FloatingLayer","controlled","Controlled","mount","Mount","disabled","Disabled","dynamic","Dynamic","exampleList","_exampleList","_defineProperty","_useLocale","useLocale","NAME_SPACE_POPUP","local","_slicedToArray","dataList","useMemo","Object","keys","map","key","_objectSpread","titleList","item","title","href","concat","React","ComponentInnerLayout","data","ComponentCodeBlock"],"sourceRoot":""}