{"version":3,"file":"js/856.4cc82e8c.js","mappings":"gOAyBaA,EAAQ,CACnBC,KAxBW,88BAyBXC,UAAWC,EAAAA,ICFAC,EAAS,CACpBH,KAxBW,0+BAyBXC,UAAWG,EAAAA,ICTAC,EAAW,CACtBL,KAjBW,sjBAkBXC,UAAWK,EAAAA,ICSAC,EAAY,CACvBP,KA5BW,2vBA6BXC,UAAWO,EAAAA,ICyBAC,EAAiB,CAC5BT,KAvDW,urDAwDXC,UAAWS,EAAAA,ICFAC,EAAmB,CAC9BX,KAvDW,6xDAwDXC,UAAWW,EAAAA,ICnDAC,GAAWC,EAAG,CAAC,GAAJC,EAAAA,EAAAA,GAAAD,EACrBf,EAAME,UAAYF,IAAKgB,EAAAA,EAAAA,GAAAD,EACvBX,EAAOF,UAAYE,IAAMY,EAAAA,EAAAA,GAAAD,EACzBT,EAASJ,UAAYI,IAAQU,EAAAA,EAAAA,GAAAD,EAC7BP,EAAUN,UAAYM,IAASQ,EAAAA,EAAAA,GAAAD,EAC/BL,EAAeR,UAAYQ,IAAcM,EAAAA,EAAAA,GAAAD,EACzCH,EAAiBV,UAAYU,GAAgBG,G,+kBCuBhD,QA7BA,WACE,IAAAE,GAAgBC,EAAAA,EAAAA,GAAyC,CAAEhB,UAAWiB,EAAAA,KAA/DC,GAAwFC,EAAAA,EAAAA,GAAAJ,EAAA,GAAnF,GACNK,GAAWC,EAAAA,EAAAA,UACf,kBACEC,OAAOC,KAAKL,GAAOM,KAAI,SAACC,GAAG,OAAAC,EAAAA,EAAA,CACzBD,IAAAA,GACGP,EAAMO,IACNb,EAAYa,GAAI,GAClB,GACL,CAACP,IAGGS,GAAYN,EAAAA,EAAAA,UAChB,kBACED,EAASI,KAAI,SAACI,GAAI,MAAM,CACtBC,MAAOD,EAAKC,MACZC,KAAM,IAAFC,OAAMH,EAAKH,KAChB,GAAE,GACL,CAACL,IAEH,OACEY,EAAAA,cAACC,EAAAA,EAAoB,CAACN,UAAWA,GAC9BP,EAASI,KAAI,SAACU,EAAMC,GAAK,OACxBH,EAAAA,cAACI,EAAAA,IAAkBC,EAAAA,EAAAA,GAAA,CAACZ,IAAKU,GAAWD,GAAQ,IAIpD,C","sources":["webpack://@mx-design/example/./src/pages/gridLayout/examples/basic.tsx","webpack://@mx-design/example/./src/pages/gridLayout/examples/column.tsx","webpack://@mx-design/example/./src/pages/gridLayout/examples/position.tsx","webpack://@mx-design/example/./src/pages/gridLayout/examples/holyGrail.tsx","webpack://@mx-design/example/./src/pages/gridLayout/examples/containerAlign.tsx","webpack://@mx-design/example/./src/pages/gridLayout/examples/containerJustify.tsx","webpack://@mx-design/example/./src/pages/gridLayout/examples/index.ts","webpack://@mx-design/example/./src/pages/gridLayout/index.tsx"],"sourcesContent":["import { Basic } from '../locale';\r\n\r\nconst code = `\r\nimport { GridLayout, Cell, Button } from '@mx-design/web';\r\n\r\nfunction App() {\r\n  const cellStyle = { background: \"var(--bg-color-component)\", padding: '4px 0' };\r\n  return (\r\n      <GridLayout columns={6}>\r\n        <Cell style={cellStyle} width={1} middle>1/6</Cell>\r\n        <Cell style={cellStyle} width={1} middle>1/6</Cell>\r\n        <Cell style={cellStyle} width={1} middle>1/6</Cell>\r\n        <Cell style={cellStyle} width={1} middle>1/6</Cell>\r\n        <Cell style={cellStyle} width={1} middle>1/6</Cell>\r\n        <Cell style={cellStyle} width={1} middle>1/6</Cell>\r\n        <Cell style={cellStyle} width={2} middle>2/6</Cell>\r\n        <Cell style={cellStyle} width={2} middle>2/6</Cell>\r\n        <Cell style={cellStyle} width={2} middle>2/6</Cell>\r\n        <Cell style={cellStyle} width={3} middle>1/3</Cell>\r\n        <Cell style={cellStyle} width={3} middle>1/3</Cell>\r\n        <Cell style={cellStyle} width={6} middle>1/1</Cell>\r\n      </GridLayout>\r\n  )\r\n}`;\r\n\r\nexport const basic = {\r\n  code,\r\n  namespace: Basic,\r\n};\r\n","import { Column } from '../locale';\r\n\r\nconst code = `\r\nimport { GridLayout, Cell, Button } from '@mx-design/web';\r\n\r\nfunction App() {\r\n  const cellStyle = { background: \"var(--bg-color-component)\", padding: '4px 0' };\r\n  return (\r\n      <GridLayout flow=\"column\" columns={4}>\r\n        <Cell style={cellStyle} height={1} middle>1/6</Cell>\r\n        <Cell style={cellStyle} height={1} middle>1/6</Cell>\r\n        <Cell style={cellStyle} height={1} middle>1/6</Cell>\r\n        <Cell style={cellStyle} height={1} middle>1/6</Cell>\r\n        <Cell style={cellStyle} height={1} middle>1/6</Cell>\r\n        <Cell style={cellStyle} height={1} middle>1/6</Cell>\r\n        <Cell style={cellStyle} height={2} middle>2/6</Cell>\r\n        <Cell style={cellStyle} height={2} middle>2/6</Cell>\r\n        <Cell style={cellStyle} height={2} middle>2/6</Cell>\r\n        <Cell style={cellStyle} height={3} middle>1/3</Cell>\r\n        <Cell style={cellStyle} height={3} middle>1/3</Cell>\r\n        <Cell style={cellStyle} height={6} middle>1/1</Cell>\r\n      </GridLayout>\r\n  )\r\n}`;\r\n\r\nexport const column = {\r\n  code,\r\n  namespace: Column,\r\n};\r\n","import { Position } from '../locale';\r\n\r\nconst code = `\r\nimport { GridLayout, Cell, Button } from '@mx-design/web';\r\n\r\nfunction App() {\r\n  const cellStyle = { background: \"var(--bg-color-component)\", padding: '20px 0' };\r\n  return (\r\n    <GridLayout columns={3}>\r\n      <Cell style={cellStyle} middle>Top Left</Cell>\r\n      <Cell left={3} style={cellStyle} middle>Top Right</Cell>\r\n      <Cell left={2} top={2} style={cellStyle} middle>Middle</Cell>\r\n      <Cell top={3} style={cellStyle} middle>Bottom Left</Cell>\r\n      <Cell top={3} left={3} style={cellStyle} middle>Bottom Right</Cell>\r\n    </GridLayout>\r\n  )\r\n}`;\r\n\r\nexport const position = {\r\n  code,\r\n  namespace: Position,\r\n};\r\n","import { HolyGrail } from '../locale';\r\n\r\nconst code = `\r\nimport { GridLayout, Cell, Button } from '@mx-design/web';\r\n\r\nfunction App() {\r\n  const cellStyle = { background: \"var(--bg-color-component)\", padding: '4px 0' };\r\n  const cellStyleContent = { ...cellStyle, height: '200px' };\r\n  return (\r\n    <GridLayout columns=\"100px 1fr 100px\" rows=\"minmax(45px,auto) 1fr minmax(45px,auto)\">\r\n      <Cell width={3} style={cellStyle} middle>\r\n        <h3>Header</h3>\r\n      </Cell>\r\n      <Cell style={cellStyleContent} middle>\r\n        Menu\r\n      </Cell>\r\n      <Cell style={cellStyleContent} middle>\r\n        Content\r\n      </Cell>\r\n      <Cell style={cellStyleContent} middle>\r\n        Ads\r\n      </Cell>\r\n      <Cell width={3} style={cellStyle} middle>\r\n        footer\r\n      </Cell>\r\n    </GridLayout>\r\n  );\r\n}`;\r\n\r\nexport const holyGrail = {\r\n  code,\r\n  namespace: HolyGrail,\r\n};\r\n","import { ContainerAlign } from '../locale';\r\n\r\nconst code = `\r\nimport { GridLayout, Cell, Button } from '@mx-design/web';\r\n\r\nfunction App() {\r\n  const cellStyle = { background: \"var(--bg-color-component)\", padding: '4px 12px' };\r\n  const cellTitleStyle = { border: \"1px solid var(--bg-color-component)\", padding: '4px 12px' };\r\n  return (\r\n      <GridLayout rows={3}>\r\n        <GridLayout gap=\"8px\" rows=\"29px 1fr\" style={cellTitleStyle}>\r\n        <Cell>Justify Start</Cell>\r\n        <GridLayout columns=\"50px 50px 50px\" justifyContent=\"start\">\r\n          <Cell style={cellStyle} middle>\r\n            A\r\n          </Cell>\r\n          <Cell style={cellStyle} middle>\r\n            B\r\n          </Cell>\r\n          <Cell style={cellStyle} middle>\r\n            C\r\n          </Cell>\r\n        </GridLayout>\r\n        </GridLayout>\r\n        <GridLayout gap=\"8px\" rows=\"29px 1fr\" style={cellTitleStyle}>\r\n        <Cell>Justify End</Cell>\r\n        <GridLayout columns=\"50px 50px 50px\" justifyContent=\"end\">\r\n          <Cell style={cellStyle} middle>\r\n            A\r\n          </Cell>\r\n          <Cell style={cellStyle} middle>\r\n            B\r\n          </Cell>\r\n          <Cell style={cellStyle} middle>\r\n            C\r\n          </Cell>\r\n        </GridLayout>\r\n        </GridLayout>\r\n        <GridLayout gap=\"8px\" rows=\"29px 1fr\" style={cellTitleStyle}>\r\n        <Cell>Justify Space-between</Cell>\r\n        <GridLayout columns=\"50px 50px 50px\" justifyContent=\"space-between\">\r\n          <Cell style={cellStyle} middle>\r\n            A\r\n          </Cell>\r\n          <Cell style={cellStyle} middle>\r\n            B\r\n          </Cell>\r\n          <Cell style={cellStyle} middle>\r\n            C\r\n          </Cell>\r\n        </GridLayout>\r\n        </GridLayout>\r\n      </GridLayout>\r\n  );\r\n}`;\r\n\r\nexport const containerAlign = {\r\n  code,\r\n  namespace: ContainerAlign,\r\n};\r\n","import { ContainerJustify } from '../locale';\r\n\r\nconst code = `\r\nimport { GridLayout, Cell, Button } from '@mx-design/web';\r\n\r\nfunction App() {\r\n  const cellStyle = { background: \"var(--bg-color-component)\", padding: '4px 12px' };\r\n  const cellTitleStyle = { border: \"1px solid var(--bg-color-component)\", padding: '4px 12px' };\r\n  return (\r\n      <GridLayout columns={3}>\r\n        <GridLayout gap=\"8px\" rows=\"29px 200px\" style={cellTitleStyle}>\r\n          <Cell>Align Start</Cell>\r\n          <GridLayout flow=\"column\" rows=\"30px 30px 30px\" alignContent=\"start\">\r\n            <Cell style={cellStyle} middle>\r\n              A\r\n            </Cell>\r\n            <Cell style={cellStyle} middle>\r\n              B\r\n            </Cell>\r\n            <Cell style={cellStyle} middle>\r\n              C\r\n            </Cell>\r\n          </GridLayout>\r\n        </GridLayout>\r\n        <GridLayout gap=\"8px\" rows=\"29px 200px\" style={cellTitleStyle}>\r\n          <Cell>Align End</Cell>\r\n          <GridLayout flow=\"column\" rows=\"30px 30px 30px\" alignContent=\"end\">\r\n            <Cell style={cellStyle} middle>\r\n              A\r\n            </Cell>\r\n            <Cell style={cellStyle} middle>\r\n              B\r\n            </Cell>\r\n            <Cell style={cellStyle} middle>\r\n              C\r\n            </Cell>\r\n          </GridLayout>\r\n        </GridLayout>\r\n        <GridLayout gap=\"8px\" rows=\"29px 200px\" style={cellTitleStyle}>\r\n          <Cell>Align Space-between</Cell>\r\n          <GridLayout flow=\"column\" rows=\"30px 30px 30px\" alignContent=\"space-between\">\r\n            <Cell style={cellStyle} middle>\r\n              A\r\n            </Cell>\r\n            <Cell style={cellStyle} middle>\r\n              B\r\n            </Cell>\r\n            <Cell style={cellStyle} middle>\r\n              C\r\n            </Cell>\r\n          </GridLayout>\r\n        </GridLayout>\r\n      </GridLayout>\r\n  );\r\n}`;\r\n\r\nexport const containerJustify = {\r\n  code,\r\n  namespace: ContainerJustify,\r\n};\r\n","import { basic } from './basic';\r\nimport { column } from './column';\r\nimport { position } from './position';\r\nimport { holyGrail } from './holyGrail';\r\nimport { containerAlign } from './containerAlign';\r\nimport { containerJustify } from './containerJustify';\r\n\r\nexport const exampleList = {\r\n  [basic.namespace]: basic,\r\n  [column.namespace]: column,\r\n  [position.namespace]: position,\r\n  [holyGrail.namespace]: holyGrail,\r\n  [containerAlign.namespace]: containerAlign,\r\n  [containerJustify.namespace]: containerJustify,\r\n};\r\n","import React, { useMemo } from 'react';\r\nimport ComponentInnerLayout from '@/components/Layout/ComponentInnerLayout';\r\nimport { useLocale } from '@/locale/useLocal/useLocal';\r\nimport { exampleList } from './examples';\r\nimport { NAME_SPACE_GRID_LAYOUT } from './locale';\r\nimport { ComponentCodeBlock } from '@/components/DemoBlock';\r\n\r\nfunction GridLayoutExample() {\r\n  const [local] = useLocale<typeof NAME_SPACE_GRID_LAYOUT>({ namespace: NAME_SPACE_GRID_LAYOUT });\r\n  const dataList = useMemo(\r\n    () =>\r\n      Object.keys(local).map((key) => ({\r\n        key,\r\n        ...local[key],\r\n        ...exampleList[key],\r\n      })),\r\n    [local]\r\n  );\r\n\r\n  const titleList = useMemo(\r\n    () =>\r\n      dataList.map((item) => ({\r\n        title: item.title,\r\n        href: `#${item.key}`,\r\n      })),\r\n    [dataList]\r\n  );\r\n  return (\r\n    <ComponentInnerLayout titleList={titleList}>\r\n      {dataList.map((data, index) => (\r\n        <ComponentCodeBlock key={index} {...data} />\r\n      ))}\r\n    </ComponentInnerLayout>\r\n  );\r\n}\r\n\r\nexport default GridLayoutExample;\r\n"],"names":["basic","code","namespace","Basic","column","Column","position","Position","holyGrail","HolyGrail","containerAlign","ContainerAlign","containerJustify","ContainerJustify","exampleList","_exampleList","_defineProperty","_useLocale","useLocale","NAME_SPACE_GRID_LAYOUT","local","_slicedToArray","dataList","useMemo","Object","keys","map","key","_objectSpread","titleList","item","title","href","concat","React","ComponentInnerLayout","data","index","ComponentCodeBlock","_extends"],"sourceRoot":""}