{"version":3,"file":"js/616.7cf67086.js","mappings":"0OAmBaA,EAAQ,CACnBC,KAlBW,yTAmBXC,UAAWC,EAAAA,ICoCAC,EAAY,CACvBH,KAxDW,w3CAyDXC,UAAWG,EAAAA,ICxDAC,GAAWC,EAAG,CAAC,GAAJC,EAAAA,EAAAA,GAAAD,EACrBP,EAAME,UAAYF,IAAKQ,EAAAA,EAAAA,GAAAD,EACvBH,EAAUF,UAAYE,GAASG,G,qkBC8BlC,QA5BA,WACE,IAAAE,GAAgBC,EAAAA,EAAAA,GAAmC,CAAER,UAAWS,EAAAA,KAAzDC,GAA4EC,EAAAA,EAAAA,GAAAJ,EAAA,GAAvE,GACNK,GAAWC,EAAAA,EAAAA,UACf,kBACEC,OAAOC,KAAKL,GAAOM,KAAI,SAACC,GAAG,OAAAC,EAAAA,EAAA,GACtBR,EAAMO,IACNb,EAAYa,GAAI,GAClB,GACL,CAACP,EAAON,IAGJe,GAAYN,EAAAA,EAAAA,UAChB,kBACED,EAASI,KAAI,SAACI,GAAI,MAAM,CACtBC,MAAOD,EAAKC,MACZC,KAAM,IAAFC,OAAMH,EAAKpB,WAChB,GAAE,GACL,CAACY,IAGH,OACEY,EAAAA,cAACC,EAAAA,EAAoB,CAACN,UAAWA,GAC9BP,EAASI,KAAI,SAACU,GAAI,OACjBF,EAAAA,cAACG,EAAAA,IAAkBC,EAAAA,EAAAA,GAAA,CAACX,IAAKS,EAAK1B,WAAe0B,GAAQ,IAI7D,C","sources":["webpack://@mx-design/example/./src/pages/affix/examples/basic.tsx","webpack://@mx-design/example/./src/pages/affix/examples/container.tsx","webpack://@mx-design/example/./src/pages/affix/examples/index.ts","webpack://@mx-design/example/./src/pages/affix/index.tsx"],"sourcesContent":["import { Basic } from '../locale';\r\n\r\nconst code = `\r\nimport { Affix, Button } from '@mx-design/web';\r\n\r\nfunction App() {\r\n  const [top, setTop] = React.useState(150);\r\n\r\n  const handleClick = () => {\r\n    setTop(top + 10);\r\n  };\r\n\r\n  return (\r\n    <Affix offsetTop={top} offsetBottom={10}>\r\n      <Button onClick={handleClick}>固钉</Button>\r\n    </Affix>\r\n  );\r\n}`;\r\n\r\nexport const basic = {\r\n  code,\r\n  namespace: Basic,\r\n};\r\n","import { Container } from '../locale';\r\n\r\nconst code = `\r\nimport { Affix } from '@mx-design/web';\r\n\r\nfunction App() {\r\n  const [container, setContainer] = React.useState(null);\r\n  const [affixed, setAffixed] = React.useState(false);\r\n  const affixRef = React.useRef(null);\r\n\r\n  const handleFixedChange = (affixed, { top }) => {\r\n    console.log('top', top);\r\n    setAffixed(affixed);\r\n  };\r\n\r\n  const backgroundStyle = {\r\n    height: '1500px',\r\n    paddingTop: '100px',\r\n    backgroundColor: '#fff',\r\n    backgroundImage:\r\n      \\`linear-gradient(45deg,#ddd 25%,transparent 0),\r\n      linear-gradient(45deg,transparent 75%,#ddd 0),\r\n      linear-gradient(45deg,#ddd 25%,transparent 0),\r\n      linear-gradient(45deg,transparent 75%,#ddd 0)\\`,\r\n    backgroundSize: '30px 30px',\r\n    backgroundPosition: '0 0,15px 15px,15px 15px,0 0',\r\n  };\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        borderRadius: '3px',\r\n        height: '400px',\r\n        overflowX: 'hidden',\r\n        overflowY: 'auto',\r\n        overscrollBehavior: 'none',\r\n      }}\r\n      ref={(ref)=>{\r\n        setContainer(ref)\r\n      }}\r\n    >\r\n      <div style={backgroundStyle}>\r\n        <Affix\r\n          offsetTop={50}\r\n          container={container}\r\n          zIndex={5}\r\n          onFixedChange={handleFixedChange}\r\n          ref={affixRef}\r\n          isInScrollContainer\r\n        >\r\n          <Button>affixed: {\\`\\${affixed}\\`}</Button>\r\n        </Affix>\r\n      </div>\r\n    </div>\r\n  );\r\n}`;\r\n\r\nexport const container = {\r\n  code,\r\n  namespace: Container,\r\n};\r\n","import { basic } from './basic';\r\nimport { container } from './container';\r\n\r\nexport const exampleList = {\r\n  [basic.namespace]: basic,\r\n  [container.namespace]: container,\r\n};\r\n","import React, { useMemo } from 'react';\r\nimport ComponentInnerLayout from '@/components/Layout/ComponentInnerLayout';\r\nimport { NAME_SPACE_AFFIX } from './locale';\r\nimport { useLocale } from '@/locale/useLocal/useLocal';\r\nimport { ComponentCodeBlock } from '@/components/DemoBlock';\r\nimport { exampleList } from './examples';\r\n\r\nfunction AffixExample() {\r\n  const [local] = useLocale<typeof NAME_SPACE_AFFIX>({ namespace: NAME_SPACE_AFFIX });\r\n  const dataList = useMemo(\r\n    () =>\r\n      Object.keys(local).map((key) => ({\r\n        ...local[key],\r\n        ...exampleList[key],\r\n      })),\r\n    [local, exampleList]\r\n  );\r\n\r\n  const titleList = useMemo(\r\n    () =>\r\n      dataList.map((item) => ({\r\n        title: item.title,\r\n        href: `#${item.namespace}`,\r\n      })),\r\n    [dataList]\r\n  );\r\n\r\n  return (\r\n    <ComponentInnerLayout titleList={titleList}>\r\n      {dataList.map((data) => (\r\n        <ComponentCodeBlock key={data.namespace} {...data} />\r\n      ))}\r\n    </ComponentInnerLayout>\r\n  );\r\n}\r\nexport default AffixExample;\r\n"],"names":["basic","code","namespace","Basic","container","Container","exampleList","_exampleList","_defineProperty","_useLocale","useLocale","NAME_SPACE_AFFIX","local","_slicedToArray","dataList","useMemo","Object","keys","map","key","_objectSpread","titleList","item","title","href","concat","React","ComponentInnerLayout","data","ComponentCodeBlock","_extends"],"sourceRoot":""}