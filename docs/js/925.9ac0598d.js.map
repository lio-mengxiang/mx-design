{"version":3,"file":"js/925.9ac0598d.js","mappings":"0OAqBaA,EAAQ,CACnBC,KApBW,yUAqBXC,UAAWC,EAAAA,IC4CAC,EAAY,CACvBH,KAlEW,o3CAmEXC,UAAWG,EAAAA,ICrBAC,EAAS,CACpBL,KA/CW,q/BAgDXC,UAAWK,EAAAA,IClBAC,EAAQ,CACnBP,KA/BW,yjBAgCXC,UAAWO,EAAAA,ICuDAC,EAAW,CACtBT,KAxFW,qhEAyFXC,UAAWS,EAAAA,ICpEAC,EAAY,CACvBX,KAtBW,gYAuBXC,UAAWW,EAAAA,ICGAC,EAAS,CACpBb,KA3BW,mfA4BXC,UAAWa,EAAAA,ICtBAC,GAAWC,EAAG,CAAC,GAAJC,EAAAA,EAAAA,GAAAD,EACrBjB,EAAME,UAAYF,IAAKkB,EAAAA,EAAAA,GAAAD,EACvBb,EAAUF,UAAYE,IAASc,EAAAA,EAAAA,GAAAD,EAC/BX,EAAOJ,UAAYI,IAAMY,EAAAA,EAAAA,GAAAD,EACzBH,EAAOZ,UAAYY,IAAMI,EAAAA,EAAAA,GAAAD,EACzBT,EAAMN,UAAYM,IAAKU,EAAAA,EAAAA,GAAAD,EACvBP,EAASR,UAAYQ,IAAQQ,EAAAA,EAAAA,GAAAD,EAC7BL,EAAUV,UAAYU,GAASK,G,qkBCoBlC,QA5BA,WACE,IAAAE,GAAgBC,EAAAA,EAAAA,GAAqC,CAAElB,UAAWmB,EAAAA,KAA3DC,GAAgFC,EAAAA,EAAAA,GAAAJ,EAAA,GAA3E,GACNK,GAAWC,EAAAA,EAAAA,UACf,kBACEC,OAAOC,KAAKL,GAAOM,KAAI,SAACC,GAAG,OAAAC,EAAAA,EAAA,GACtBR,EAAMO,IACNb,EAAYa,GAAI,GAClB,GACL,CAACP,EAAON,IAGJe,GAAYN,EAAAA,EAAAA,UAChB,kBACED,EAASI,KAAI,SAACI,GAAI,MAAM,CACtBC,MAAOD,EAAKC,MACZC,KAAM,IAAFC,OAAMH,EAAK9B,WAChB,GAAE,GACL,CAACsB,IAGH,OACEY,EAAAA,cAACC,EAAAA,EAAoB,CAACN,UAAWA,GAC9BP,EAASI,KAAI,SAACU,GAAI,OACjBF,EAAAA,cAACG,EAAAA,IAAkBC,EAAAA,EAAAA,GAAA,CAACX,IAAKS,EAAKpC,WAAeoC,GAAQ,IAI7D,C","sources":["webpack://@mx-design/example/./src/pages/message/examples/basic.tsx","webpack://@mx-design/example/./src/pages/message/examples/different.tsx","webpack://@mx-design/example/./src/pages/message/examples/custom.tsx","webpack://@mx-design/example/./src/pages/message/examples/close.tsx","webpack://@mx-design/example/./src/pages/message/examples/position.tsx","webpack://@mx-design/example/./src/pages/message/examples/showClose.tsx","webpack://@mx-design/example/./src/pages/message/examples/update.tsx","webpack://@mx-design/example/./src/pages/message/examples/index.ts","webpack://@mx-design/example/./src/pages/message/index.tsx"],"sourcesContent":["import { Basic } from '../locale';\r\n\r\nconst code = `\r\nimport { useMessage, Button } from '@mx-design/web';\r\n\r\nfunction App() {\r\n  const Message = useMessage();\r\n  return (\r\n    <Button\r\n      onClick={() => {\r\n        Message.add({\r\n          type: 'info',\r\n          content: 'This is an info message!'\r\n        });\r\n      }}\r\n    >\r\n      Open Message\r\n    </Button>\r\n  );\r\n};`;\r\n\r\nexport const basic = {\r\n  code,\r\n  namespace: Basic,\r\n};\r\n","import { Different } from '../locale';\r\n\r\nconst code = `\r\nimport { useMessage, Space, Button } from '@mx-design/web';\r\n\r\nfunction App() {\r\n  const Message = useMessage();\r\n  return (\r\n    <Space>\r\n      <Button\r\n        onClick={() => {\r\n          Message.add({\r\n            type: 'info',\r\n            content: 'This is an info message!',\r\n          });\r\n        }}\r\n      >\r\n        Info Message\r\n      </Button>\r\n      <Button\r\n        onClick={() => {\r\n          Message.add({\r\n            type: 'warning',\r\n            content: 'This is an warning message!',\r\n          });\r\n        }}\r\n        status=\"warning\"\r\n      >\r\n        Warning Message\r\n      </Button>\r\n      <Button\r\n        onClick={() => {\r\n          Message.add({\r\n            type: 'success',\r\n            content: 'This is an success message!',\r\n          });\r\n        }}\r\n        status=\"success\"\r\n      >\r\n        Success Message\r\n      </Button>\r\n      <Button\r\n        onClick={() => {\r\n          Message.add({\r\n            type: 'error',\r\n            content: 'This is an error message!',\r\n          });\r\n        }}\r\n        status=\"error\"\r\n      >\r\n        Error Message\r\n      </Button>\r\n      <Button\r\n        onClick={() => {\r\n          Message.add({\r\n            type: 'loading',\r\n            content: 'This is an loading message!',\r\n          });\r\n        }}\r\n        status=\"default\"\r\n      >\r\n        Loading Message\r\n      </Button>\r\n    </Space>\r\n  );\r\n};`;\r\n\r\nexport const different = {\r\n  code,\r\n  namespace: Different,\r\n};\r\n","import { Custom } from '../locale';\r\n\r\nconst code = `\r\nimport { useMessage, Space, Button, IconSmile, IconSun } from '@mx-design/web';\r\n\r\nfunction App() {\r\n  const Message = useMessage();\r\n  return (\r\n    <Space>\r\n      <Button\r\n        onClick={() => {\r\n          Message.add({\r\n            type: 'info',\r\n            icon: <IconSmile />,\r\n            content: 'This is an info message!',\r\n          });\r\n        }}\r\n      >\r\n        Info Message\r\n      </Button>\r\n      <Button\r\n        onClick={() => {\r\n          Message.add({\r\n            type: 'warning',\r\n            icon: <IconStop />,\r\n            content: 'This is an warning message!',\r\n          });\r\n        }}\r\n        status=\"warning\"\r\n      >\r\n        Warning Message\r\n      </Button>\r\n      <Button\r\n        onClick={() => {\r\n          Message.add({\r\n            type: 'success',\r\n            icon: <IconSun />,\r\n            content: 'This is an success message!',\r\n          });\r\n        }}\r\n        status=\"success\"\r\n      >\r\n        Success Message\r\n      </Button>\r\n    </Space>\r\n  );\r\n};`;\r\n\r\nexport const custom = {\r\n  code,\r\n  namespace: Custom,\r\n};\r\n","import { Close } from '../locale';\r\n\r\nconst code = `\r\nimport { useMessage, Button, Space } from '@mx-design/web';\r\n\r\nfunction App() {\r\n  const Message = useMessage();\r\n  return (\r\n    <Space>\r\n      <Button\r\n        onClick={() => {\r\n          Message.add({\r\n            id: 'aa',\r\n            type: 'info',\r\n            content: 'This is an info message!',\r\n          });\r\n        }}\r\n      >\r\n        Open Message\r\n      </Button>\r\n      <Button\r\n        status=\"default\"\r\n        onClick={() => {\r\n          Message.remove('aa');\r\n        }}\r\n      >\r\n        Close Message\r\n      </Button>\r\n    </Space>\r\n  );\r\n}`;\r\n\r\nexport const close = {\r\n  code,\r\n  namespace: Close,\r\n};\r\n","import { Position } from '../locale';\r\n\r\nconst code = `\r\nimport { useMessage, Button } from '@mx-design/web';\r\n\r\nfunction App() {\r\n  const Message = useMessage();\r\n  return (\r\n    <Space direction=\"vertical\">\r\n      <Space>\r\n        <Button\r\n          status=\"warning\"\r\n          onClick={() => {\r\n            Message.add({\r\n              type: 'warning',\r\n              position: 'top-left',\r\n              content: 'This is an info message!',\r\n            });\r\n          }}\r\n        >\r\n          Top Left\r\n        </Button>\r\n        <Button\r\n          status=\"success\"\r\n          onClick={() => {\r\n            Message.add({\r\n              type: 'success',\r\n              position: 'top',\r\n              content: 'This is an info message!',\r\n            });\r\n          }}\r\n        >\r\n          Top\r\n        </Button>\r\n        <Button\r\n          status=\"default\"\r\n          onClick={() => {\r\n            Message.add({\r\n              type: 'loading',\r\n              position: 'top-right',\r\n              content: 'This is an info message!',\r\n            });\r\n          }}\r\n        >\r\n          Top Right\r\n        </Button>\r\n      </Space>\r\n      <Space>\r\n        <Button\r\n          status=\"warning\"\r\n          onClick={() => {\r\n            Message.add({\r\n              type: 'warning',\r\n              position: 'bottom-left',\r\n              content: 'This is an info message!',\r\n            });\r\n          }}\r\n        >\r\n          Bottom Left\r\n        </Button>\r\n        <Button\r\n          status=\"success\"\r\n          onClick={() => {\r\n            Message.add({\r\n              type: 'success',\r\n              position: 'bottom',\r\n              content: 'This is an info message!',\r\n            });\r\n          }}\r\n        >\r\n          Bottom\r\n        </Button>\r\n        <Button\r\n          status=\"default\"\r\n          onClick={() => {\r\n            Message.add({\r\n              type: 'loading',\r\n              position: 'bottom-right',\r\n              content: 'This is an info message!',\r\n            });\r\n          }}\r\n        >\r\n          Bottom Right\r\n        </Button>\r\n      </Space>\r\n    </Space>\r\n  );\r\n}`;\r\n\r\nexport const position = {\r\n  code,\r\n  namespace: Position,\r\n};\r\n","import { ShowClose } from '../locale';\r\n\r\nconst code = `\r\nimport { useMessage, Button } from '@mx-design/web';\r\n\r\nfunction App() {\r\n  const Message = useMessage();\r\n  return (\r\n    <Button\r\n      onClick={() => {\r\n        Message.add({\r\n          type: 'info',\r\n          closable: true,\r\n          showIcon: false,\r\n          content: 'This is an info message!'\r\n        });\r\n      }}\r\n    >\r\n      Open Message\r\n    </Button>\r\n  );\r\n};`;\r\n\r\nexport const showClose = {\r\n  code,\r\n  namespace: ShowClose,\r\n};\r\n","import { Update } from '../locale';\r\n\r\nconst code = `\r\nimport { useMessage, Button } from '@mx-design/web';\r\n\r\nfunction App() {\r\n  const Message = useMessage();\r\n\r\n  function updateMessage() {\r\n    const id = Message.add({\r\n      type: 'loading',\r\n      content: 'Will update after 1 seconds...',\r\n    });\r\n    setTimeout(() => {\r\n      Message.update(id, {\r\n        type: 'success',\r\n        content: 'Update success!',\r\n      });\r\n    },1000);\r\n  }\r\n\r\n  return (\r\n    <Button onClick={updateMessage}>\r\n      Update message\r\n    </Button>\r\n  );\r\n};`;\r\n\r\nexport const update = {\r\n  code,\r\n  namespace: Update,\r\n};\r\n","import { basic } from './basic';\r\nimport { different } from './different';\r\nimport { custom } from './custom';\r\nimport { close } from './close';\r\nimport { position } from './position';\r\nimport { showClose } from './showClose';\r\nimport { update } from './update';\r\n\r\nexport const exampleList = {\r\n  [basic.namespace]: basic,\r\n  [different.namespace]: different,\r\n  [custom.namespace]: custom,\r\n  [update.namespace]: update,\r\n  [close.namespace]: close,\r\n  [position.namespace]: position,\r\n  [showClose.namespace]: showClose,\r\n};\r\n","import React, { useEffect, useMemo } from 'react';\r\nimport ComponentInnerLayout from '@/components/Layout/ComponentInnerLayout';\r\nimport { NAME_SPACE_MESSAGE } from './locale';\r\nimport { useLocale } from '@/locale/useLocal/useLocal';\r\nimport { ComponentCodeBlock } from '@/components/DemoBlock';\r\nimport { exampleList } from './examples';\r\n\r\nfunction SpinExample() {\r\n  const [local] = useLocale<typeof NAME_SPACE_MESSAGE>({ namespace: NAME_SPACE_MESSAGE });\r\n  const dataList = useMemo(\r\n    () =>\r\n      Object.keys(local).map((key) => ({\r\n        ...local[key],\r\n        ...exampleList[key],\r\n      })),\r\n    [local, exampleList]\r\n  );\r\n\r\n  const titleList = useMemo(\r\n    () =>\r\n      dataList.map((item) => ({\r\n        title: item.title,\r\n        href: `#${item.namespace}`,\r\n      })),\r\n    [dataList]\r\n  );\r\n\r\n  return (\r\n    <ComponentInnerLayout titleList={titleList}>\r\n      {dataList.map((data) => (\r\n        <ComponentCodeBlock key={data.namespace} {...data} />\r\n      ))}\r\n    </ComponentInnerLayout>\r\n  );\r\n}\r\nexport default SpinExample;\r\n"],"names":["basic","code","namespace","Basic","different","Different","custom","Custom","close","Close","position","Position","showClose","ShowClose","update","Update","exampleList","_exampleList","_defineProperty","_useLocale","useLocale","NAME_SPACE_MESSAGE","local","_slicedToArray","dataList","useMemo","Object","keys","map","key","_objectSpread","titleList","item","title","href","concat","React","ComponentInnerLayout","data","ComponentCodeBlock","_extends"],"sourceRoot":""}